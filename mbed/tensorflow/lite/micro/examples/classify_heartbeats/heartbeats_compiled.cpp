// This file is generated. Do not edit.
// Generated on: 18.03.2022 12:52:03

#include "tensorflow/lite/c/builtin_op_data.h"
#include "tensorflow/lite/c/common.h"
#include "tensorflow/lite/micro/kernels/micro_ops.h"

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#endif

namespace {

constexpr int kTensorArenaSize = 3856;
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_QUANTIZE, OP_RESHAPE, OP_DEPTHWISE_CONV_2D, OP_MAX_POOL_2D, OP_CONV_2D, OP_FULLY_CONNECTED, OP_SOFTMAX, OP_DEQUANTIZE,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

TfLiteContext ctx{};
TfLiteTensor tflTensors[37];
TfLiteRegistration *registrations[OP_LAST];
TfLiteNode tflNodes[18];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,5 } };
const TfArray<1, float> quant0_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const TfArray<2, int> tensor_dimension1 = { 2, { 1,260 } };
const TfArray<1, float> quant1_scale = { 1, { 0.041768167167901993, } };
const TfArray<1, int> quant1_zero = { 1, { -40 } };
const TfLiteAffineQuantization quant1 = { (TfLiteFloatArray*)&quant1_scale, (TfLiteIntArray*)&quant1_zero, 0 };
const TfArray<4, int> tensor_dimension2 = { 4, { 1,1,260,1 } };
const TfArray<1, float> quant2_scale = { 1, { 0.041768167167901993, } };
const TfArray<1, int> quant2_zero = { 1, { -40 } };
const TfLiteAffineQuantization quant2 = { (TfLiteFloatArray*)&quant2_scale, (TfLiteIntArray*)&quant2_zero, 0 };
const ALIGN(8) int32_t tensor_data3[1*4] = { 
  1, 1, 260, 1, 
};
const TfArray<2, int> tensor_dimension3 = { 2, { 1,4 } };
const ALIGN(8) int8_t tensor_data4[1*1*3*5] = { 
  /* [0][0][][] */ -92,127,86,127,-127, 127,-4,-56,89,-95, 110,30,127,122,-76, 
};
const TfArray<4, int> tensor_dimension4 = { 4, { 1,1,3,5 } };
const TfArray<5, float> quant4_scale = { 5, { 0.0033529202919453382, 0.0037609029095619917, 0.003431632649153471, 0.0044378018938004971, 0.004375288262963295, } };
const TfArray<5, int> quant4_zero = { 5, { 0,0,0,0,0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 3 };
const ALIGN(8) int32_t tensor_data5[5] = { 1810, 834, -165, 2221, -118, };
const TfArray<1, int> tensor_dimension5 = { 1, { 5 } };
const TfArray<5, float> quant5_scale = { 5, { 0.0001400453329551965, 0.00015708601858932525, 0.00014333300350699574, 0.00018535884737502784, 0.00018274776812177151, } };
const TfArray<5, int> quant5_zero = { 5, { 0,0,0,0,0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const TfArray<4, int> tensor_dimension6 = { 4, { 1,1,129,5 } };
const TfArray<1, float> quant6_scale = { 1, { 0.040442217141389847, } };
const TfArray<1, int> quant6_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const ALIGN(8) int32_t tensor_data7[1*4] = { 
  1, 1, 129, 5, 
};
const TfArray<2, int> tensor_dimension7 = { 2, { 1,4 } };
const ALIGN(8) int8_t tensor_data8[10*1*4*5] = { 
  /* [0][0][][] */ -92,-54,-103,-89,-1, 45,-100,-127,-55,-19, 59,-60,-14,-32,-44, 44,89,8,116,-50, 
  /* [1][0][][] */ 46,-50,-81,75,80, -54,-13,70,118,-127, -22,-106,-10,-77,73, -43,-5,-25,52,90, 
  /* [2][0][][] */ 73,49,50,11,-25, 17,77,58,52,-127, 22,-45,-11,61,-82, -53,49,25,-66,19, 
  /* [3][0][][] */ -41,76,3,19,-52, -127,11,-56,-81,63, 64,-33,1,-68,93, 44,27,50,95,120, 
  /* [4][0][][] */ -103,3,-27,-15,-7, 4,-121,6,-127,39, -40,38,48,7,63, -3,50,-37,-55,17, 
  /* [5][0][][] */ 90,7,44,102,-127, 22,82,-24,55,-1, -20,25,-5,-38,90, -127,6,-102,-84,60, 
  /* [6][0][][] */ 53,115,27,77,-44, 85,-37,29,42,-29, -46,-94,-64,-68,98, -6,-126,29,-127,-4, 
  /* [7][0][][] */ -41,40,-28,59,106, 107,33,127,-2,96, 97,95,-42,108,58, 99,-90,-116,-50,60, 
  /* [8][0][][] */ -49,-33,-127,-104,124, -102,17,38,-40,53, -15,49,27,13,-1, -33,55,56,-9,-12, 
  /* [9][0][][] */ 76,35,-88,92,-127, 57,55,-2,-53,-83, -52,73,-49,-43,-5, -85,7,-81,29,33, 
};
const TfArray<4, int> tensor_dimension8 = { 4, { 10,1,4,5 } };
const TfArray<10, float> quant8_scale = { 10, { 0.0045874384231865406, 0.0030868386384099722, 0.0041971779428422451, 0.0049810805357992649, 0.0060659986920654774, 0.0041284114122390747, 0.0034654291812330484, 0.0028394588734954596, 0.0047294013202190399, 0.004073078278452158, } };
const TfArray<10, int> quant8_zero = { 10, { 0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<4, int> tensor_dimension9 = { 4, { 1,1,126,10 } };
const TfArray<1, float> quant9_scale = { 1, { 0.03842516615986824, } };
const TfArray<1, int> quant9_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const ALIGN(8) int32_t tensor_data10[10] = { 3154, -1336, 1410, 162, 102, -123, 994, -2785, 352, 1941, };
const TfArray<1, int> tensor_dimension10 = { 1, { 10 } };
const TfArray<10, float> quant10_scale = { 10, { 0.00018552617984823883, 0.00012483859609346837, 0.00016974318714346737, 0.0002014459460042417, 0.00024532244424335659, 0.00016696211241651326, 0.00014014964108355343, 0.00011483400885481387, 0.00019126747793052346, 0.00016472431889269501, } };
const TfArray<10, int> quant10_zero = { 10, { 0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfArray<4, int> tensor_dimension11 = { 4, { 1,1,63,10 } };
const TfArray<1, float> quant11_scale = { 1, { 0.03842516615986824, } };
const TfArray<1, int> quant11_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const ALIGN(8) int32_t tensor_data12[1*4] = { 
  1, 1, 63, 10, 
};
const TfArray<2, int> tensor_dimension12 = { 2, { 1,4 } };
const ALIGN(8) int8_t tensor_data13[20*1*4*10] = { 
  /* [0][0][][] */ -61,41,-20,7,88,-10,-52,76,127,3, -68,35,53,33,-2,19,-4,44,10,-51, 9,17,57,-86,-60,4,-50,21,49,5, 19,-71,-10,-125,-29,-35,-104,-76,-62,31, 
  /* [1][0][][] */ 72,-58,-115,127,46,19,9,27,-8,-47, -37,0,51,-91,-5,-8,-103,55,54,39, -1,32,38,-20,-9,91,-19,-61,-63,36, 74,-31,7,-29,-49,-68,-43,-20,-23,-14, 
  /* [2][0][][] */ -127,61,80,-53,-123,54,45,-14,-15,90, -66,-27,56,-55,-113,41,-18,-3,-62,-4, 4,-67,-67,-70,-102,-48,-43,-11,-120,26, 76,-64,14,26,-31,37,-5,-92,-35,-5, 
  /* [3][0][][] */ -22,-36,9,-123,-64,-110,-90,-24,-19,-12, -21,30,10,-25,-43,42,-7,-92,-86,44, 127,-86,-87,15,-88,23,4,-90,-13,13, 118,-35,13,-32,-45,10,-70,-30,-14,0, 
  /* [4][0][][] */ -127,-12,8,14,31,7,-31,-23,-25,-6, -64,5,25,18,-22,21,-37,18,21,-24, -53,22,3,5,29,34,45,17,-7,-8, -103,-38,-1,29,31,8,22,26,28,-11, 
  /* [5][0][][] */ -71,-27,14,-17,15,9,-16,7,9,-25, -63,-20,-44,33,16,-67,20,-14,17,8, -127,30,40,-34,-6,-8,-24,4,29,21, -25,33,37,-20,10,-32,8,37,-13,-13, 
  /* [6][0][][] */ 36,-46,-9,-54,-119,-34,-26,6,-91,56, -8,-37,41,-35,-45,60,-46,-10,-103,52, 0,64,-57,89,99,77,71,23,45,64, -37,59,-63,-39,1,-76,54,38,76,-127, 
  /* [7][0][][] */ -127,33,-18,16,2,-35,7,26,19,-17, -102,-25,15,-43,-35,-104,-44,0,27,-26, 57,-56,-41,-2,19,-76,-17,-53,26,-76, 111,6,0,84,15,45,24,54,10,-44, 
  /* [8][0][][] */ -111,-38,78,-82,-127,67,55,28,-86,35, -44,-6,-20,-28,-62,-11,22,-45,-25,50, 43,-59,-46,11,-4,35,59,-101,14,53, 38,-72,-36,11,21,-63,35,-60,-23,-72, 
  /* [9][0][][] */ 38,67,-80,127,67,29,72,2,-53,-73, 1,-41,-78,98,99,-6,-41,78,108,-115, 102,-28,19,-89,-77,-80,-42,-11,43,-4, -5,-37,-36,-93,-12,-74,-7,-74,-73,43, 
  /* [10][0][][] */ 127,-74,-41,-5,49,-80,-54,-40,12,-45, 70,6,-26,47,4,-18,-14,-17,-13,8, 0,-8,15,-63,-41,-30,-75,18,2,22, 11,12,18,-67,-88,-9,-47,7,-60,4, 
  /* [11][0][][] */ -4,16,-8,-10,28,-36,-18,-24,25,-35, 18,-20,-4,25,37,19,30,-4,-24,-19, -2,31,17,18,23,22,-14,22,-6,23, -17,4,27,-40,-45,-54,-127,1,7,-11, 
  /* [12][0][][] */ -13,65,39,45,51,-4,48,20,49,44, 80,-72,-112,-13,18,-83,-29,-53,54,-6, 77,-79,-25,-12,-17,-127,-24,-63,-44,-55, 54,-51,-41,-51,-55,-22,6,-105,-63,36, 
  /* [13][0][][] */ 91,-35,-63,15,-17,-63,-51,-83,-32,-67, 21,-19,18,23,-39,-1,-15,-50,-62,-30, -66,61,21,24,34,25,-11,25,-10,41, -127,-39,44,-6,66,20,5,35,60,-9, 
  /* [14][0][][] */ -31,-45,-24,62,90,-115,-32,34,-19,-56, -69,-47,3,-54,-43,9,53,5,62,25, -68,22,27,-108,-62,-76,32,-60,-28,6, -127,73,55,57,-14,20,13,23,-71,25, 
  /* [15][0][][] */ -2,17,-23,19,3,13,37,-45,-27,29, 34,-8,-90,36,23,-32,15,-8,4,-127, 27,-8,-8,-29,10,-25,-36,21,-23,3, -1,23,-15,6,-8,-29,-13,-38,-9,-16, 
  /* [16][0][][] */ -43,-12,15,-55,-97,-31,-2,-13,-127,5, -40,12,29,-11,-37,14,-29,19,-105,3, -66,24,21,-2,-11,1,9,-5,-10,21, -44,-16,-35,2,26,21,27,-31,58,17, 
  /* [17][0][][] */ -65,39,-32,-10,-32,-36,-17,10,18,-44, -89,9,13,47,27,51,-12,48,41,31, 28,-7,-86,-27,33,-6,-37,-12,52,23, 33,18,-29,-35,-1,-84,-51,9,-17,-127, 
  /* [18][0][][] */ -127,-14,2,-108,-24,-18,-5,-42,-102,53, -25,-12,-72,18,30,-40,-38,-65,-81,-48, 68,-46,-56,74,46,72,48,33,10,-32, 70,75,2,87,46,4,58,15,30,-45, 
  /* [19][0][][] */ -83,34,4,-41,-64,77,80,-35,-127,87, 50,-18,-32,81,-29,-40,34,-36,-25,34, 6,9,14,-5,-18,-96,14,-14,0,-78, -35,6,11,-19,27,27,-16,37,26,-22, 
};
const TfArray<4, int> tensor_dimension13 = { 4, { 20,1,4,10 } };
const TfArray<20, float> quant13_scale = { 20, { 0.004478156566619873, 0.0052750008180737495, 0.0038741892203688622, 0.0056412308476865292, 0.0060754870064556599, 0.0065790340304374695, 0.0040613487362861633, 0.0052648917771875858, 0.0047763856127858162, 0.0034552800934761763, 0.0054492531344294548, 0.0068873520940542221, 0.0054817516356706619, 0.0053370087407529354, 0.0044896923936903477, 0.0059305219911038876, 0.0067491051740944386, 0.0050943382084369659, 0.0041226954199373722, 0.0056611248292028904, } };
const TfArray<20, int> quant13_zero = { 20, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const TfArray<4, int> tensor_dimension14 = { 4, { 1,1,60,20 } };
const TfArray<1, float> quant14_scale = { 1, { 0.044849712401628494, } };
const TfArray<1, int> quant14_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const ALIGN(8) int32_t tensor_data15[20] = { 1088, -1315, 1104, 699, -427, -14, 689, -100, 706, -23, 907, -100, 1289, 1117, 1296, 92, 658, -565, -691, 83, };
const TfArray<1, int> tensor_dimension15 = { 1, { 20 } };
const TfArray<20, float> quant15_scale = { 20, { 0.00017207390919793397, 0.00020269278320483863, 0.00014886636927258223, 0.00021676522737834603, 0.0002334516029804945, 0.00025280046975240111, 0.00015605799853801727, 0.00020230433437973261, 0.00018353341147303581, 0.00013276971003506333, 0.00020938845409546047, 0.00026464764960110188, 0.00021063721214886755, 0.00020507544104475528, 0.00017251717508770525, 0.00022788128990214318, 0.00025933550205081701, 0.00019575079204514623, 0.00015841526328586042, 0.00021752966858912259, } };
const TfArray<20, int> quant15_zero = { 20, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const ALIGN(8) int8_t tensor_data16[30*600] = { 
  -30, 36, -42, 10, -2, 7, -11, 10, -10, 34, 64, 39, 43, 35, -9, 31, -29, 8, 21, -11, 18, 40, -29, -31, 4, 18, -5, 11, -1, 5, 37, 44, 4, 75, 47, 13, -19, 15, 22, 17, 66, 36, 36, -49, 10, 4, 58, 9, 3, 10, -12, 43, -14, 41, 39, 14, 37, -1, 11, -22, 10, 1, 37, -2, 31, 30, 4, 20, 44, 8, -34, 9, -18, -22, -12, 14, -15, 3, 17, 10, 3, -56, -5, 20, 31, 16, -30, 31, -24, 47, 11, 19, 67, -31, -23, 16, -12, 34, -7, 15, -9, 1, -28, 22, 44, 5, -34, 18, -42, 37, 78, 20, 26, -17, -1, 10, -2, 22, -12, -48, 25, 66, 21, 27, -4, 20, 4, -26, 6, 15, 20, -6, -2, -55, 5, -22, 35, 15, -18, -20, -19, -5, -5, 24, -32, -22, 12, -19, -2, -23, -18, -50, 5, -29, -19, -34, 17, -63, -7, 19, -2, -3, -15, 23, -10, 10, -1, 4, 9, -38, 21, 15, 11, 9, -4, -13, -14, -13, 12, 69, 3, -7, 21, 42, -5, -4, -8, 1, -14, -30, 5, -9, 10, 0, 17, -7, -1, -19, -4, -8, -5, -1, -7, 23, -2, 3, 20, -20, 4, -1, 22, 5, -25, 10, 5, -24, 10, 6, -14, -12, 9, 15, 4, -1, 3, 8, -8, 4, 1, 36, 27, -30, 7, 7, 2, 25, -2, -3, -13, 9, 5, -4, 6, -17, 26, 26, 51, 1, 13, 18, -11, 18, -31, -100, -19, -6, 29, -3, -3, -15, 3, -22, 29, 7, 25, 23, -8, 7, -16, 14, -1, 38, -36, -2, 20, 13, 32, 26, 11, -22, 59, 16, 9, 21, 13, 19, 20, 18, -28, 18, -1, 12, -1, 43, 30, -7, 21, 28, 27, 12, 26, 10, 32, 16, -1, 10, 3, 15, 10, 12, -14, 9, -14, -3, 3, -18, 26, 13, -14, -5, 17, 6, 17, -12, -16, -11, 27, 2, 22, 22, -5, -11, 20, -9, -21, 9, 16, -1, -21, -4, -10, 10, 8, -5, -38, -23, -12, -1, 5, 2, 0, -15, 28, 10, -6, -1, -11, 2, -4, 50, -22, 7, 10, -8, -22, -36, -2, -9, 19, -4, 14, -17, 7, 9, 18, -6, -2, -16, -26, -32, -30, -14, -8, -26, -11, -16, -8, -12, 23, -9, -4, -15, -22, 8, 30, 5, 9, -13, -13, 58, -3, -5, 3, -8, 14, 3, 16, -8, 15, 3, 14, 11, 3, 16, 10, 11, 0, -14, 14, 15, 1, 5, 10, 8, 4, 14, -5, 12, 6, 23, 25, 11, 17, 6, 7, 7, 5, 5, -2, -8, 10, -35, 9, 11, -14, 7, -18, -17, 6, 9, 10, 9, 27, -5, -2, 18, 5, -4, -4, -14, 13, -36, 13, 35, -2, 1, 3, -7, -3, -3, 12, 13, 24, -24, 7, -13, 17, -3, -24, -5, 11, 22, 1, 5, 9, 27, -2, -9, -8, 7, 28, -8, 50, 3, -3, 20, 0, 2, -2, 9, 10, -1, 18, -14, -1, -9, -8, -1, -45, -5, 12, -8, 3, 3, -7, -4, 16, 7, -3, 1, 27, -23, 22, -3, -11, -2, 10, -19, -16, -7, -12, -2, -17, 6, -13, 8, 17, 0, 18, -3, 7, 5, 22, 5, -12, -2, 4, 20, -10, -26, -25, -26, -32, -22, -24, -3, 4, 7, 36, 9, -3, 16, 10, 13, 0, -10, 5, 30, 9, -21, 3, -1, 0, 9, -15, 9, -7, 7, 50, 16, -4, 40, 8, 12, 1, -13, 13, 11, 14, 12, 11, 7, -11, 15, 22, 8, -1, 18, 10, 16, 
  60, -18, 60, -23, 1, 15, 29, -21, 41, -27, -35, 13, -33, -12, 45, -6, 44, -25, 13, 52, 37, -34, 12, -10, 37, -8, 58, -7, 38, -40, -16, 18, -22, -9, 31, -12, 39, -14, 48, 0, 5, 17, 25, 17, 49, 23, -19, 5, 33, 13, 10, -13, 14, 29, 29, 15, 23, -3, 14, 29, 16, 26, 31, 3, 36, -14, 29, 11, 56, -6, 26, 17, -9, -18, -48, 1, 21, 9, 3, -6, -32, -40, -10, -17, 0, 36, 8, 12, 10, 25, -30, 18, -33, -3, -56, 19, -33, 24, 10, 36, -48, -52, -49, -11, 10, 8, -21, 33, -5, 47, -20, -24, -33, -108, -47, 35, -32, 13, 8, -4, -82, 9, -67, -21, -3, -3, -82, 24, -32, 41, -7, -17, 10, -41, -99, 23, -69, 16, -18, -39, -67, 2, -127, 8, -26, -21, -97, 17, -84, 31, 8, -45, 8, -56, -15, 5, -59, 19, 6, -43, -124, 12, -13, 18, -5, -17, 7, 14, 9, 1, 7, -7, 6, -15, -17, 12, -7, 0, 15, -8, 5, 1, -79, 30, -7, 0, -11, -32, -39, -13, 11, 4, -4, 10, -2, -20, -7, -41, 7, 4, 1, 5, 4, -1, -7, -20, -2, -47, -7, -10, -46, -4, -58, 11, 11, -36, 2, -10, 1, -10, 7, 21, 2, -54, 3, 9, 9, -4, 7, -6, -30, -20, 14, -60, -7, -18, 6, 6, -6, -3, 8, -83, 23, -1, -16, 1, 3, -10, -13, -9, -17, 17, 27, -41, -63, 8, -4, -6, -38, -6, 23, -12, -8, -13, -19, 4, -41, -16, -71, -16, -38, 0, 0, -22, 18, 1, -11, -14, -33, -52, 11, -18, 26, -6, -25, -12, 0, -25, -36, -39, -55, -19, -16, 3, -18, -30, 21, -20, -18, -52, -11, -31, 21, -32, -37, -24, -49, -21, -22, -8, -31, -39, -13, -27, -20, 17, -5, -17, -35, -20, -14, -26, 8, -2, -32, -36, 12, -3, -11, -25, -10, -27, -12, -9, 0, -26, -5, -26, -6, -33, -3, 5, -19, 15, -29, -2, -7, 3, 13, -17, -13, -26, 2, -13, -19, -24, -18, -14, 28, 13, -14, 2, -7, 8, 5, -22, -27, 3, -50, -23, 10, -34, 7, 12, -19, -6, -27, -7, -8, -22, -9, 15, -3, -37, 7, -28, 16, 0, 3, -20, 15, 1, -42, 38, -16, -3, -8, 19, 9, -52, -2, -38, 3, -35, -14, -7, 2, 5, 18, -5, -8, -9, -12, 19, -8, -2, -7, 29, 21, 14, 5, 17, -9, -13, 0, -2, 11, 22, 14, 26, -4, 22, 12, 27, -9, 15, -8, 28, -15, 9, -4, 21, -22, -5, -25, 4, -17, 11, -16, 17, -13, 0, 8, 3, 2, -5, -15, -4, -40, 11, -12, -21, -19, 16, -4, -25, -19, 5, -11, 3, -7, -37, 18, -52, -5, 3, -6, -8, -15, 2, -48, -18, -8, 27, -6, -30, -5, 10, 9, -26, 12, -4, -6, -20, -39, 1, -10, -5, 15, 2, -66, 19, -31, 39, 7, 12, 0, 6, -2, 15, 6, 14, 5, 3, -5, -11, -34, 2, 17, 19, -17, -4, -18, 15, 15, 11, 13, 27, -19, 11, -5, 18, 24, 0, -9, 17, -12, 5, -20, 21, -21, 8, 7, 16, 0, -24, 13, 10, 15, 8, -6, -3, 15, 5, 8, 9, 5, 6, -15, 11, -11, -5, -8, -12, -10, -4, 7, -3, 12, 5, 2, -4, 32, 12, 23, 2, 11, -7, -37, 8, -5, -4, 5, 5, 10, -29, 5, 16, 8, 12, -10, 29, 13, 3, -4, 20, -6, -19, -11, -2, 
  1, 20, -19, -19, 20, 13, -1, 4, -14, 30, 1, 49, -8, 50, 31, 19, 6, 11, -1, -28, 27, 46, 19, -25, 8, 10, 30, 4, 44, 34, -5, 9, 24, 5, 34, 28, 21, 9, -26, 18, 23, 35, 16, -13, -8, -1, 19, 8, 45, 7, 1, -24, 37, -7, 5, -11, -3, 7, -13, 55, -23, 17, -11, 0, -13, -28, -15, 13, -22, 14, 8, 8, 28, -8, -1, 22, -25, -7, 6, -9, 2, 48, -13, 2, -14, -6, -9, 4, -21, -11, 8, 14, -7, 19, 23, 9, 4, -9, 39, 49, 0, 49, 2, 31, -19, -7, 8, 30, -23, -20, 1, 19, -8, 23, 25, 14, 15, -8, 46, 21, 30, 63, 32, 5, -11, -24, 16, -24, 16, 2, 31, 24, 0, 12, 6, -11, 25, -24, 11, 25, 10, 9, 24, -13, -18, -3, -10, -3, 10, -17, -15, -23, -19, -18, 2, -7, 21, -30, 7, -11, -5, -34, 4, -8, -2, -18, 4, -2, -8, -33, -29, -20, -25, -4, -23, -15, 2, -17, 4, 1, -23, 15, 0, 32, 16, 5, 12, 9, 13, -2, -13, -6, -3, -4, -19, -4, -16, 13, 12, -21, -15, -8, -10, 29, -6, 9, -15, 3, -10, 17, 53, -4, -22, -4, -6, -6, -14, 5, 9, -2, 10, 7, -15, 23, 2, 21, -1, 7, -15, 15, -18, 11, 4, -4, -13, -2, -5, 15, -42, -5, 10, -8, -2, -6, -35, -9, -9, -3, -5, 6, 2, 7, 14, -6, 36, -4, -12, -14, -16, 4, -12, 9, -3, 14, -41, -30, -9, -27, -27, -33, 4, -25, -4, -9, 20, -23, 1, -31, -14, 0, -13, -36, 18, 1, 9, -30, 21, -44, -7, -32, -5, -34, -24, 5, -9, -33, 15, -27, 7, -12, -4, 4, 31, -12, 4, -33, 18, -13, 29, -34, -17, -43, -40, -29, -45, -23, 13, -10, 41, 38, -28, 3, 0, -34, -14, -43, 16, -5, 32, -6, -19, -32, -14, -29, -35, 2, -24, 27, 39, 45, -34, 32, 3, -25, -18, -27, -17, 0, 16, 13, 6, -41, -5, -16, -22, 12, -22, 13, 7, 17, -35, -3, -9, 7, -27, -9, -18, 19, 31, -2, -26, -37, -3, -23, -20, 6, -18, 17, 36, 34, -23, 23, -28, 15, -19, -14, -13, 11, -9, 22, -4, -12, 2, -8, -5, 12, -31, 35, 34, -8, -21, 44, -14, 17, -20, -3, -19, 5, -15, 39, 2, 2, 19, 11, 10, 20, -16, 41, 0, 0, -9, 63, -27, 23, -8, 0, -23, -10, -13, -1, -4, 2, 0, 24, 17, -15, -12, 9, 6, -12, -2, 38, 5, 29, -2, 3, 4, -11, -13, -25, -3, 13, 5, 1, 22, -19, -8, 4, 15, 4, -3, 23, 2, -7, 6, 15, -2, -11, -27, -24, 15, 32, -14, 10, 15, -18, 1, 6, -22, 20, 20, 12, 12, -37, -1, 24, -4, -12, -14, -30, -35, 5, -40, 5, 30, -18, 3, -11, -13, -10, 19, -4, 10, -35, -4, -1, 30, -23, 13, -19, -23, -4, -9, 7, 28, -7, 15, -16, -6, 22, 24, 16, 15, -19, -13, -8, 21, -10, 13, -2, -28, 1, -6, 11, -3, 9, 15, -11, -2, 8, 5, 1, 9, 2, -26, -8, -5, -21, -10, -8, -8, -6, -5, -5, -5, 14, 9, -10, -15, 18, 8, 27, -2, 13, -16, 3, 24, -33, 0, -1, 5, 11, -21, 10, 8, -29, 2, -18, -6, 21, 12, 23, 0, -8, -21, -4, 2, -30, -6, -23, -14, 5, -18, 17, 17, -13, 10, -21, -14, 7, 
  -12, 10, 23, 13, 2, -13, -9, 2, -1, -15, 10, -27, 13, -1, 0, -10, 16, -6, 18, 14, -16, 30, 13, 45, 4, 13, 24, -10, 1, -23, -1, -8, -11, -4, -4, -2, 6, -10, 14, 19, -6, -32, 0, 2, -14, 4, -11, 7, -12, 1, 5, 21, 7, -1, -6, 28, 0, 15, -6, 43, 23, -17, 2, -14, -10, 37, -42, -11, -40, 11, -17, 6, -4, 46, 80, -3, 32, -4, -39, -28, 34, -7, 51, -4, 19, 5, 50, -34, 42, -19, -38, -23, -12, -17, -4, -41, 41, -14, -17, -42, -4, -42, 12, -44, -34, 4, 7, -55, 43, -1, -18, 9, 11, -18, -3, -4, -22, -4, -54, 65, 7, -69, -22, -3, -3, 2, 21, 22, 17, -32, -23, -15, 8, -7, -5, 16, -10, -9, 2, -29, -24, -11, -33, -28, 3, 12, 0, -23, -11, 5, 22, 32, -11, 32, 18, 21, -15, -15, -9, -20, 25, -35, -9, -14, 11, 15, 8, -16, -1, 4, 3, 8, -1, 29, 12, 10, 22, 20, -4, -13, 10, -4, 14, -18, 9, -9, 28, -12, 2, -20, -7, -7, 2, -2, -4, 15, 5, 10, 11, 11, -5, -2, -10, -13, -4, 9, -2, 19, -4, 15, -40, -7, 14, -1, 11, 2, -9, -8, 7, 12, -3, -26, 7, -2, 6, -3, 20, 4, 6, -2, 8, 18, -6, -5, 9, 4, 16, -1, 20, 3, -5, 27, 9, -45, 10, 3, 0, 26, 19, 31, 24, 6, -12, 10, 21, 2, 8, 23, -1, -11, 8, 17, -2, -15, 15, 12, -15, 22, 38, 23, 11, 14, -6, 8, -16, -3, -4, 17, 6, 32, 6, 33, -20, 0, -18, 9, -30, 16, -2, 25, 0, 2, 0, -1, 9, -3, -10, 10, 2, -3, -10, -10, -27, 2, 1, -3, -10, -4, -35, -3, 0, 7, 0, -6, -21, -16, -27, 3, -16, -7, -14, 32, -19, -26, 15, 2, -38, 9, -31, -10, 10, 1, 4, 11, 22, 7, 3, 1, 6, -34, -3, -24, 3, 26, 15, 2, -26, -5, -49, 3, 3, 22, -15, -11, 14, 8, 10, 13, -9, -39, -1, -37, 12, -4, 22, 17, 20, 9, -8, -7, -9, 7, -34, 7, 13, -13, 25, 6, 16, -20, 8, -35, 9, 0, 24, 8, 23, 15, 47, 2, -35, 2, -18, -22, 2, -14, 16, 10, 30, 16, 0, -44, -2, 20, 33, 38, -1, 26, 15, 1, -26, 9, 0, -35, 11, 13, 3, 21, 10, 26, 9, -23, -2, 17, 22, 23, -1, 30, 11, 20, -2, -4, 10, -37, -25, 24, -4, 36, 4, 13, 6, 23, -20, -9, 24, 0, -6, 37, -15, 42, 15, 5, 36, 11, -15, 29, -6, 35, 15, -5, -6, 49, -3, 13, 3, -4, -11, 18, -3, 55, 49, 17, 54, 30, 7, 29, -13, 15, -4, 27, 17, 43, 11, 5, 1, 0, 10, -12, 11, 25, 26, 1, 39, 20, 7, -16, 6, 12, -15, -3, 11, -2, -4, -2, -2, -4, 15, -20, 11, 6, 8, -1, 11, -9, 7, -12, 0, 9, 5, -1, 8, 17, 0, 7, -8, 8, 10, -10, 14, 9, 16, -5, 18, 2, 9, -4, 5, -17, 9, 6, 5, -7, -2, 16, -9, 2, -12, -27, 2, 12, 17, 17, 18, 1, -4, 21, -5, -13, -16, -4, 6, 14, 3, 6, -14, 8, 5, -20, -2, -9, 18, 17, -3, 18, 24, -10, 4, -19, -17, 11, 17, 22, 0, 8, -6, 17, 20, -50, -6, 8, 3, -35, 27, 12, 17, 10, 15, -4, -8, -4, 
  -26, 4, -16, 42, -26, 28, 12, -19, 0, -25, 18, 2, 27, -2, 37, -26, -22, -21, -14, 53, -4, 14, -32, 24, 26, 42, 23, -15, 5, 12, 28, 16, 45, 42, 32, 4, 7, -26, 20, 44, 22, 26, 11, 0, 6, 31, 26, -21, 41, -5, 34, 17, 6, 39, 36, -10, 28, -19, -32, 12, 20, 6, 14, -15, 4, 7, 10, -11, 17, -13, -7, 0, -2, 42, 34, -16, 17, -20, 0, 41, 28, 2, 21, -5, 35, -22, 28, 1, 20, -8, -5, -9, -41, 1, 2, -16, 27, -21, 19, -13, 6, 27, 31, -26, 21, 9, 10, -8, 26, -13, -14, 5, -21, -11, 2, -6, -6, -3, 21, 25, 10, 12, 9, 15, -16, 25, -36, 13, -39, -14, -1, -3, -18, 13, 8, -18, 7, -1, -22, -2, -1, 2, 42, 69, 0, -24, 12, 37, 22, -51, -4, -3, -2, -12, -15, -40, 1, 8, 34, 31, -20, 47, 7, 18, -21, -19, 3, 17, 16, -2, 13, 12, 11, 7, 5, 8, -10, 9, 8, 51, 8, 10, 10, 9, -12, 1, -2, -14, 51, -13, 1, 6, -1, 13, 12, -9, 5, -21, -17, 4, 6, -10, 7, 12, 2, -8, -6, -35, -6, -17, -15, -8, 19, -7, -9, -14, 11, -13, 5, 35, -5, 3, -2, 3, 7, -22, 5, -13, -1, 6, 33, -20, 3, 6, -17, -5, 10, 0, -38, -1, -25, -6, -14, 10, 12, 4, -12, -8, 10, -24, -28, -29, -40, -1, -28, -4, -15, -24, 8, 21, -23, -37, 18, -30, 20, 17, -20, -4, -11, 7, -57, 17, -16, -20, -9, 14, -1, 21, -3, -31, 3, -8, -7, 17, 9, 32, -3, 1, 9, 10, -31, 16, -19, -60, 4, 23, -17, 11, -28, 8, -13, -46, -9, 7, 16, 23, -29, 16, -7, 9, -17, -11, -25, -34, -23, 8, -17, 15, -28, -15, 2, -20, -21, 17, 10, -1, 8, 4, -19, 7, -16, 13, -17, -5, -12, -4, -40, 20, -23, 1, -5, 3, -39, 3, -3, -2, 21, 4, -19, 10, 9, -9, -23, 17, -10, -1, -35, 5, -12, 7, -8, -11, -18, -25, -19, -7, 9, 9, 8, 5, -25, -4, -13, 4, -14, 8, -8, 1, 1, 22, -4, 12, -20, -42, -1, -11, 18, 4, 18, -4, -18, -3, -2, 21, 4, 19, -4, -9, 7, 7, 0, 30, -17, -10, -5, 10, -10, 0, 8, 26, -5, 15, 18, 11, -4, 21, -2, -7, 25, 25, -6, 29, -5, 16, 10, 12, -15, -1, -4, 11, -9, 4, 15, 25, 1, -5, -3, -7, 16, -15, 10, 10, 17, 47, 16, 22, -10, -6, 14, 4, 41, -1, 24, -9, -20, 2, -16, 2, 6, 11, 4, 3, -7, 52, 13, 1, -24, 4, -13, -11, 33, 5, 6, 4, 1, -10, -5, 19, -13, -8, 11, 0, -1, 11, -6, -4, -1, -8, 2, -17, 3, -10, -8, 32, 2, -30, -8, 24, 1, -1, -10, 5, 1, 7, 7, -2, 12, -8, -20, -4, 7, 1, 18, 4, -5, 0, -9, 3, 34, 41, 2, 25, 1, -7, 23, 8, 42, -20, 18, -26, 5, 5, -33, 13, -23, -15, -10, 18, 45, 25, -12, 1, -12, -12, 19, 3, 2, -1, -1, -3, -1, -15, -24, -6, -18, -1, -3, 19, 26, 9, -3, -2, -6, -17, 11, 0, 4, 9, 4, -15, -20, -4, -31, 4, -5, 4, -19, 9, -4, 6, 7, 18, -12, -6, 12, 5, -10, 14, 10, -8, 1, 19, -23, -1, 23, 3, -12, 28, 24, -8, 
  5, -5, -6, -10, 6, -6, -2, -6, -3, -1, -9, -2, 6, -1, -4, -5, 7, -8, -5, 2, 5, 0, 7, -1, 3, -5, -2, -2, 7, -9, -9, 5, -8, 0, -1, 5, -12, -10, 0, -6, 4, -12, -6, -1, -8, 7, -8, 5, -2, -5, 4, -11, -10, -1, -9, -9, 1, -1, -9, 9, -5, -8, -4, -4, 1, -5, -12, 5, -12, -8, 6, -3, -1, -1, -4, -2, 5, -9, 0, 5, -7, -2, 1, -8, -3, -10, -9, -10, 6, -9, -4, -3, 5, 0, -8, -5, -1, -2, -1, 5, -4, -8, -4, -8, -3, -1, -4, -7, 2, -11, 2, -2, -5, 5, 1, 3, 7, 3, 2, 4, -8, 4, 5, 0, -6, 3, 4, 0, -3, 6, -1, 4, -10, 6, -7, 5, -7, -7, 1, -6, 3, -6, -1, -3, -3, -8, 7, -1, -1, -2, 1, -12, 5, -5, 9, 4, 7, -13, -2, 2, 5, -10, 0, 5, 7, -5, -5, 0, -11, -4, -12, 3, -3, 1, 2, -4, -8, -1, 4, -2, -8, 2, 2, -9, -3, -6, -4, 7, 4, 9, 0, -9, 5, -8, -3, 0, 0, -2, 2, -6, -13, 5, -11, -9, -5, -7, 2, -4, -4, -9, -7, -8, 5, 5, -11, -1, -7, -13, 4, -10, 0, -3, 4, 5, -9, -13, -1, -13, 0, -6, 3, -2, -11, -2, -1, -7, -13, 5, 7, 5, -10, 1, 0, -1, -8, -12, 6, -11, -1, -3, 3, 0, -9, 8, 6, -7, 0, -6, -12, -7, -11, -6, 0, -4, 1, 3, 1, 5, -6, 6, -7, -6, 1, -2, 1, -2, -3, -11, -3, -7, 5, -3, -9, 1, -4, -1, 5, -12, -5, -11, -6, -6, -12, -5, 5, -3, 8, -4, -6, -7, 4, 0, -8, -7, -7, 5, -5, -10, -1, 0, -8, -1, 0, -9, 5, 1, -4, -9, -3, 8, -10, -10, -6, 3, 2, -2, 3, 4, -6, -4, -12, -11, -5, -8, 2, -7, -10, -2, 3, -2, -10, -6, 4, -7, 0, 5, 2, -2, 3, 6, -4, -11, -5, -7, 2, 3, -10, -6, 1, 2, -2, 3, 2, -7, -2, -8, -11, 7, -7, -3, 0, 3, -6, -2, 0, 2, -10, -3, -6, -9, -1, 7, -8, 1, 5, -4, -6, 2, -11, -9, -1, -4, 3, 8, -1, 0, -3, 3, -3, 2, -6, -3, -6, 6, -8, -1, -4, -11, 2, -1, 5, -6, -11, -5, -4, -11, 4, -4, -4, 5, 5, -11, -6, -4, -4, -4, -9, -8, 5, -11, 6, -2, -3, -2, -3, 2, -5, -9, -8, -3, -6, -2, -3, -2, -9, 2, -8, 5, -9, -2, -9, -7, -5, -12, 4, -12, -4, -5, -9, -6, -1, 2, -5, 1, -9, 1, 4, -9, 5, 5, -3, 5, -5, 4, -1, 0, -6, -7, -2, 0, 1, 3, -9, 6, 5, 8, -6, -5, -2, -9, 3, -6, 2, -8, -9, -6, -7, -9, -10, -3, -2, -2, -8, 8, 5, -7, -1, -1, -8, -6, 1, 2, 2, -6, 2, -6, 1, 0, -7, -4, -4, -10, 0, -5, -1, -9, 1, 5, -1, -3, -9, -1, 3, 1, -5, -10, 0, -5, 0, 1, -2, 4, -4, 2, -2, -5, 0, -3, -9, 4, -5, -13, -5, -5, -6, -11, -4, -10, -4, -8, -6, -1, 0, -10, 4, 3, -5, -8, -4, 4, -2, -2, -9, -2, 0, -8, -9, -5, 0, -1, -10, -6, 1, -6, 5, 3, -4, -10, 4, -3, -4, -9, -11, -8, 1, 4, 7, 5, -10, 0, 
  -6, 2, -1, -42, -31, 14, 9, -5, 35, -12, -28, 14, -20, 12, 49, -11, 13, -14, -9, 40, 12, 14, 10, -16, 5, -6, 7, -17, 9, 6, -16, -19, 23, 26, 46, 13, 13, -36, -8, 4, -7, 22, 25, 10, 16, -13, 31, -21, 63, -10, 14, -24, 7, 47, 13, 5, 26, -34, 6, 38, -12, 8, 16, 5, -3, -12, 9, -11, 31, 9, 25, -21, 9, 58, -6, 19, -10, 9, -5, 37, -12, -1, -15, 3, -1, 5, -15, -6, -2, 4, 8, -18, -20, -14, -3, -17, -17, 19, 10, 17, -23, 21, -9, 2, 22, 10, -3, 8, -13, -8, 4, -2, -4, -7, 11, -18, 5, 3, 4, -21, -19, -23, -3, 20, -35, 37, -22, -1, 7, 6, -24, 7, -9, -65, -32, -22, -29, 5, -24, 51, -26, 0, -17, 67, -24, -30, 17, 41, -14, -32, -21, 10, -13, -29, -48, -7, -24, -8, 11, -1, 36, 40, -11, 18, -5, -17, -23, 11, -10, -25, 14, -7, 30, -5, -12, 34, -25, -18, 8, 38, 2, 2, 28, -21, 14, -6, -4, 10, 17, -33, -7, -12, -18, -9, -3, -3, 4, -8, 2, -51, -3, -5, -9, 33, -9, 6, -8, -3, 4, 13, -24, 6, 9, -10, -25, -9, -13, 8, -8, 22, -18, -3, -16, 37, 5, 6, -6, 14, -15, 8, 45, 6, 5, 47, 17, 12, -13, 12, -6, 4, 4, 3, -14, 10, 15, 8, 26, 4, 4, 24, 17, 8, 14, 25, 14, 10, 2, 19, 15, 23, 12, 27, -20, 12, -1, 18, -13, -6, -26, 2, -13, 20, 5, 5, 25, 13, 0, 6, -21, -13, 3, 7, 15, -6, -18, -30, 14, -5, 12, 24, -14, -20, 24, -35, -9, 10, -7, -6, -12, 16, -17, -6, -27, -2, -18, -3, -5, -29, 0, -15, 30, 3, -17, 48, 19, -11, -14, -15, 1, 39, 7, -25, -21, 16, 1, 13, -2, -6, 7, -12, 2, 4, -17, 14, 16, -5, 20, -5, 5, 21, 9, 49, 11, -9, 21, 3, 32, 1, 17, -2, -6, 2, -16, 11, 2, -3, 16, -10, 10, -5, 12, 27, 18, -19, 10, -11, 11, 8, 39, -3, -14, 5, 17, 2, -22, 14, -3, 5, 28, 52, -9, 38, 6, 2, 10, 8, 5, 9, 0, 20, 15, 1, -3, 16, -11, 2, -17, 0, 20, 23, -4, 33, -6, 24, 15, 4, -7, 7, 3, 22, -2, 4, -21, -16, -27, 7, -18, 11, 3, 8, -11, 40, -17, 44, 9, 6, -20, 16, -24, 4, -20, 5, -2, 7, 7, -2, -13, 28, -1, 9, -2, -2, -10, 17, -5, -1, -1, 28, -32, 16, -6, -9, 33, -21, -18, 4, -10, 13, 4, -22, -11, 47, -5, 1, -14, -6, 18, -1, -22, 5, 3, -8, 18, -7, 0, 1, 3, -3, 7, 2, -1, 38, -7, -11, -16, 23, -7, -1, -15, -2, 13, 1, -34, 6, 20, -12, -19, -3, 4, 13, 20, 24, -1, -21, -6, 15, -1, -11, -24, -34, -15, 29, -44, 36, 15, -14, 19, -16, 8, 4, 33, 30, 9, -2, -6, 10, 11, 23, 7, -5, -18, 22, -8, -4, 12, 1, 12, 6, 37, 15, 15, 28, 11, -14, -5, -4, 8, -15, 5, 2, 5, 8, -2, 12, 9, 8, 24, -14, 13, 4, 11, 16, 31, -9, -10, -12, 7, 3, 12, -7, 4, 15, -6, -1, 15, 6, 11, -26, -12, 3, 11, -4, 24, -42, 8, 10, 2, -13, 25, -52, 9, 33, -42, 43, 44, 4, 29, -20, 6, 0, 
  0, 27, -7, -5, 7, 19, 13, -2, 6, 4, 8, 23, 15, -20, -12, 3, 12, 7, 23, -4, 21, 32, -19, -14, 9, 13, 2, -5, 13, -3, 22, 32, 8, 19, 22, 32, 6, 12, 12, 15, 17, 55, 14, -21, 14, 3, 26, 3, 10, 5, 9, 14, -4, 10, 25, 20, 25, 5, -2, -15, 12, 3, 7, -25, 15, 12, 6, -8, -1, 8, -17, 3, -14, 31, 26, 11, 11, 18, -2, 28, 14, -48, 19, -19, 21, 5, 7, -2, -1, 11, -14, 7, 17, 0, 21, 11, 29, 14, 18, -14, -3, -16, -2, -26, 54, 27, 0, 12, 16, 11, 19, 5, -12, 10, 36, 5, 22, 19, 45, 9, 0, -11, -7, -18, -1, 75, -4, -5, 19, 20, -29, 54, -6, -11, 40, 15, 5, 48, 2, 24, 23, -15, -5, 6, -20, 1, 14, 15, -25, 11, -53, 0, 5, -22, 6, -8, -6, -5, -34, 1, 7, 19, 12, 15, -5, -15, 10, 17, 10, -17, 5, -22, 22, -13, -30, 5, -6, -4, -3, 7, -17, -22, 17, 22, -14, -18, -7, 10, 23, -11, 1, -4, 1, 3, -9, -8, -13, -5, 16, -12, -22, 21, 4, -3, -4, 3, 3, -12, 12, 9, -30, -11, 9, 11, -3, -12, -10, 6, -33, -22, -20, -24, -3, 4, -20, -12, -16, -9, 11, 13, 43, -24, -8, 54, -10, 18, -11, -10, -5, 11, -35, 13, 1, 4, -3, -18, 30, -11, -3, 23, 26, -11, -17, -27, -11, -22, -3, -3, 0, -34, -13, 8, -6, 36, -9, -3, 17, -17, 3, 2, -11, 13, -27, 0, -1, 0, -13, 0, -25, 1, -10, 6, -13, 12, -16, -19, 12, -3, 13, -10, -9, -9, -8, 8, -11, 4, -38, -9, 8, 7, -17, 1, -53, -1, 5, -6, -35, 6, -13, -22, 22, 7, -16, 22, 20, -16, -25, 7, 38, 10, 11, 8, -42, 17, 21, 10, 1, -1, -44, -4, 12, 21, -10, 20, 2, 12, -4, 2, 42, -5, 6, 37, -19, -30, 13, 2, -6, 11, -11, -5, 20, 10, 3, 46, 20, 11, -1, 15, 31, -3, 14, 5, 17, -36, 16, 16, 1, 17, 0, 2, 11, 28, -7, 13, 18, 8, 25, 14, 18, -6, 2, 8, 17, -38, 36, 32, -16, 2, -20, 3, -6, 19, -26, 1, 23, 6, 6, 6, -3, 21, 30, 34, 18, -13, 32, 16, 0, 10, -8, 35, -15, 30, 23, -10, 8, 19, 21, 20, -6, -21, 14, 55, 1, -8, 7, 13, -20, 1, -15, 10, 29, 11, 23, 3, 10, -9, 12, 1, -21, -15, 5, -10, 13, 22, 7, 6, -2, -13, -9, -22, 10, 5, -11, -1, 12, -13, 12, -4, -11, -28, 1, -1, 21, 11, 1, -10, 31, -11, 30, -46, -24, 12, -27, -2, -6, -30, 23, -7, 33, 28, 16, 5, -5, 3, 6, 9, 9, 9, 7, -10, -15, 8, -10, -2, 5, 10, -6, -6, 34, 57, 21, -1, 10, -24, 11, 10, -20, 14, 3, -16, -12, 15, -8, 34, 0, 27, 16, 0, 1, -1, 22, -12, 13, 20, -5, 21, 11, 8, 39, -19, -10, 16, -15, 12, -12, -27, -1, 7, 15, 14, -7, 17, 1, 15, -10, 1, 3, 11, 0, -11, -10, -7, 1, 6, -19, 7, -19, 2, 2, 24, -27, 1, -20, -11, 8, 7, -20, 7, -9, 0, -11, -7, 3, -16, -11, -6, -17, 6, 6, -4, -10, -7, -13, -16, 22, 4, -8, 19, -19, -8, -25, -19, -15, 8, 20, -9, -3, 23, 2, -27, 
  -9, 3, 3, 2, -10, -9, -7, 7, 6, -7, -9, 3, -4, 7, -5, 5, 0, -4, 8, -2, -2, -10, -5, -9, 3, -11, 3, 4, -3, 5, 6, 6, -2, -4, -5, -6, -3, -3, 0, 3, 0, -2, -5, -11, -10, -2, 6, -8, -3, 8, 7, 2, 3, -8, 2, -4, 5, -5, -9, 4, 4, 5, 3, -2, -4, -1, 6, 7, 3, 5, -5, -10, 3, 6, 7, 3, 7, 0, 7, -7, -9, 0, -5, -11, 1, 1, -2, 5, -8, 2, -6, -2, -3, -7, -5, -1, -9, -6, -5, -2, 2, 5, 5, 3, -3, -1, -8, 0, -11, -5, -6, 6, 7, 6, 0, 3, -7, -3, -7, 1, 0, -2, 1, -11, -8, -6, 0, -10, 3, -7, -5, 5, -7, -1, -9, -5, -11, -3, -10, -7, -12, 3, -4, 2, 2, -1, 0, -1, 3, -5, -3, 8, -10, 2, -3, -7, -5, 5, -8, -8, 6, -2, 5, -3, -11, 2, 0, -8, 5, 7, -3, 4, -8, 6, 3, -7, -3, -4, 4, -1, 0, 1, 8, 1, -11, 6, 7, -8, 4, -7, -7, 5, 7, -8, 0, 4, -7, -4, -3, -8, -9, -2, 6, 3, 1, 5, -7, -9, -5, 2, 9, -6, -6, 5, 6, -4, 2, -9, 6, 6, -5, -10, 4, -2, 0, -7, 1, 2, 7, 6, -8, 7, 4, 6, 7, -8, -4, -9, -4, -4, -9, 5, 3, -5, 4, -5, 7, -8, -8, -10, -3, 1, -9, -2, -3, -10, 5, 3, -7, 8, 7, -12, -7, -12, -3, 3, -2, -1, 8, -4, 1, -9, -11, 3, -1, 0, 6, -4, 1, 0, 0, 1, 3, 1, 7, -5, 3, -5, -12, -4, -3, 0, -7, 9, 8, -1, -4, -6, -7, 5, 1, -7, 1, -5, -6, -8, 1, -6, -3, -9, -10, 0, -2, -2, 5, -1, 6, -8, 2, 5, 3, -5, -4, -1, 1, -9, 4, -6, -7, -6, -11, -5, -3, -8, 2, 3, -3, -4, -6, 6, -11, -8, 3, 4, 1, 5, -6, 6, -8, 5, 4, -4, -10, 4, -10, 6, -3, 4, 1, -1, -12, 4, -5, 5, -8, -7, 3, -1, 8, 0, -8, -7, 7, 4, -2, -2, -1, -9, -8, 4, 1, -4, 2, 2, -4, 6, -1, -5, 6, 5, 0, 3, 4, -4, 0, 2, 5, 3, 1, 0, -10, -9, -5, -1, 4, 6, 1, -9, -3, -3, -1, -5, 6, -8, -1, -10, 0, 2, 2, -11, 5, -4, 7, 2, -7, -4, -2, -9, 4, 4, 4, -5, -9, -4, 4, 4, 6, -8, -1, 3, 4, -8, -2, -7, 4, 2, 1, 1, -9, -2, 6, 5, 4, -3, -10, 4, 0, 2, -3, 3, -3, -1, 2, -11, -7, -10, 6, -3, -3, -8, -6, -9, 0, -11, -9, 5, -6, -9, -9, 1, -6, 2, -4, 0, 2, 3, -12, 0, 6, -1, -4, -9, 4, 0, 4, 0, 1, -4, -1, -6, 3, -2, 1, -6, 4, 2, -4, 3, -8, 3, -4, -7, -5, 5, -1, -2, -8, 2, -5, -4, 7, 3, -2, 0, -3, -3, -3, 2, -8, 2, 5, -13, -7, 5, -1, 4, 3, -12, -6, -6, -8, 4, 6, 0, -2, -9, -3, -1, -7, 1, -5, -5, -5, 5, -7, -8, -8, 5, -10, -10, 0, -1, -4, -1, 1, 5, 2, -6, -2, -6, -10, -1, 5, -4, 6, -4, -9, 6, -5, 8, 1, 0, 3, -1, 1, -6, 4, -4, 2, 4, -3, -5, -9, -4, 3, -5, -7, 6, -10, -7, 
  -5, -7, -5, -1, -7, -7, 2, -1, -7, 0, 2, 6, 3, 6, -10, -6, -5, -7, -9, -5, -9, 2, 5, -6, 5, -9, 4, -5, -3, 3, 2, -2, 2, -4, 6, -8, -9, 4, 3, 8, 2, -9, -10, -5, -8, -8, -5, -11, -9, -2, -7, 5, -7, -11, 1, -8, -8, 0, -11, 6, 8, -6, 0, -8, -1, 1, 6, -2, -4, 1, -10, 7, -8, -1, -8, -11, -1, 1, -1, 1, -9, 3, -8, 0, -7, -4, 6, -7, 5, -2, -6, 3, -2, -8, -10, -1, 4, -10, 3, -10, -8, 9, 4, -5, -4, 0, 0, 0, 1, -10, -1, 7, 3, -6, 0, -10, 5, 4, -11, 2, 2, -9, 8, 2, -9, -10, 7, -8, 5, 6, -2, -11, -4, 2, -1, 3, -6, -2, -7, -7, 8, 0, 1, -11, 5, 3, 3, 5, 8, -1, -2, -2, -1, -2, -5, -7, -9, 5, -5, -8, 0, 3, -9, -4, -2, 3, -6, -11, -2, -4, -6, -5, -2, -6, -4, -9, -7, -9, -9, -6, 1, -8, -9, -7, -5, 4, -1, -7, -2, -8, 0, -7, -8, 2, -2, 0, 4, -7, -6, 4, -7, -1, 5, 6, -8, -11, -1, 3, 6, -8, 0, -11, 0, -8, -1, 1, 6, 6, -7, 1, -3, -6, -10, -1, -6, 1, 0, 0, 3, 1, -2, 0, -5, -6, 8, -9, 6, 1, -8, -7, -4, 2, 7, -10, -5, 0, 1, -8, 7, -4, 6, -10, 5, -10, 9, -10, -8, -6, -7, 3, 0, 4, -3, 4, -1, 6, -5, 2, -5, 8, 6, -1, -7, -5, -5, -3, 8, -8, 4, 1, -7, 6, -2, 5, -8, 4, -8, 7, -7, -3, -6, 3, -3, 6, -3, -4, -3, 6, 2, -10, -8, 2, 6, 4, -10, -6, 4, -3, 7, -2, 6, 6, -6, 5, -1, -2, -3, -10, 2, -6, 2, 0, 4, 1, 7, 5, -8, -8, -2, 1, -6, 1, 5, 6, 5, -4, -1, -5, 6, -4, 0, 4, -12, -1, -11, 4, 8, 0, 5, 2, -8, -1, -4, 5, 6, -4, 5, -1, 6, 7, -5, -10, -10, 9, -1, -11, -4, -2, 3, 8, -6, -2, 3, 5, 5, -4, 5, 5, 7, -2, -11, -10, 4, -3, -1, 4, -1, 8, 6, -7, 0, 4, -9, -6, -9, -5, -2, 6, -7, 4, -5, 5, 7, 6, -6, 5, 0, -7, -1, -4, -3, -1, 4, -9, 6, -5, 5, -3, -2, -7, 6, 2, 2, -3, 1, -1, 0, 6, 2, -2, -9, 2, -2, 7, 8, 7, -7, -3, 6, 5, 3, 6, -2, 1, 1, 3, -9, -3, 1, 7, -5, -3, -6, -8, 1, -9, -6, -6, 3, -3, 0, 5, 7, -8, 6, 0, 7, -10, 5, 7, 5, 7, -4, 2, 5, -10, 3, 3, -4, -6, -9, 5, -5, 3, 1, 1, -9, 2, -6, 8, -1, -2, 5, 5, -1, 3, 6, -3, -2, 0, 2, 4, -3, 7, -2, -1, -4, 4, 2, 1, -2, -1, -4, 7, 6, -1, -2, 2, -6, 4, -7, -2, 3, 2, 2, -10, -2, 6, 6, 4, 5, 2, -4, -1, -5, -5, 2, 3, 7, -8, -7, -5, 3, -2, -8, 1, -8, -2, 0, -10, 4, -9, 3, -6, 2, -2, -9, 1, -11, -1, -1, 4, -9, 6, 1, 2, -8, -8, 2, -1, -4, -11, -12, -8, 0, -4, -9, -1, -9, -1, 4, -7, 7, -2, -6, 6, 5, -4, -9, -2, 3, -1, -2, -3, 3, -1, 5, 5, 5, 9, 
  8, 6, -4, -15, 6, 13, 1, -8, 0, 2, -11, 10, -1, -8, 6, 8, -9, 4, -11, -4, 5, 7, 2, -3, 12, 6, -5, 2, -11, -8, -18, 5, 2, -9, 2, 3, -2, 4, -11, -17, 9, -14, 1, -4, 5, 6, -3, 7, -11, -8, -10, -2, -10, 3, -3, -5, 0, 0, -5, 2, 8, 1, -3, -4, -2, -6, -2, -7, 5, 4, -3, -9, 4, -1, 0, 8, -6, -2, -10, -16, 7, 1, -3, -5, -6, 5, 4, -5, 4, -6, -6, -5, 7, -5, -4, -9, 3, 0, -15, 1, 5, 3, -4, -7, -13, 7, -6, -11, -5, -9, 1, -8, 1, -8, -1, -10, -7, -10, -8, -9, -4, 0, -3, -2, -4, 4, 8, -8, 4, -12, 3, 2, -9, -10, -2, -9, -5, -7, -2, 1, -2, -3, 8, 1, -12, -16, 3, 5, 5, 3, -10, -9, -6, -11, -2, -7, -7, -4, 3, -5, 5, -1, -5, -5, -6, 4, -9, -10, 4, -10, 8, 2, -11, 3, -1, -4, -10, -9, 1, 17, -7, -5, -1, 0, -2, -11, -7, -9, -3, 8, -8, 2, 4, -3, -12, 4, -10, -3, -2, -10, -12, -10, -15, 0, -11, -8, -9, 5, -2, 4, 8, -5, 10, -11, 4, -4, -3, -12, -3, 4, -10, -7, -1, -4, 0, 8, -12, -1, 0, 7, -8, -13, -4, 4, -2, -1, -3, 4, 8, 3, -2, -1, -9, 1, 2, -4, 6, -4, -11, -4, 6, 6, -5, -4, -2, -2, -9, -6, 7, -9, 1, 10, -9, -9, -12, 1, -10, 5, 7, 9, -18, 5, -2, -21, 25, 8, -6, -6, -30, -3, 4, -9, 13, 5, 1, -7, 2, -9, -6, -6, -2, -14, 7, -5, 6, -3, 9, -5, -28, 1, -4, 5, 5, 2, -1, -12, 6, -5, -2, -4, -7, -5, 2, 1, -3, 0, -5, -4, -7, 0, -11, 0, 4, -9, -16, -9, 13, -13, 8, -4, 6, -8, -12, -7, -2, -3, -5, -5, -7, -5, 3, 6, 1, -10, -7, -13, -9, -16, 15, 0, 6, -6, 1, -5, 0, -4, 7, -10, 4, 4, 0, -2, -11, -1, -12, -4, 5, -5, -7, 1, 1, -10, -10, 4, -4, 3, -6, -14, 7, 12, -8, -6, -9, 0, 3, 2, 1, 9, -7, -5, -13, -8, 1, -6, -4, -5, 3, 8, -8, -5, 5, -11, -11, 1, -3, -3, -2, -3, -5, 5, 0, -13, 7, -11, -14, 9, 4, -1, 8, -12, -14, 10, -13, 0, -7, -2, 3, -6, -12, 6, -9, -17, 2, 0, -2, 3, -17, -11, 10, 3, -7, -2, -9, 2, -10, -2, 1, -6, -12, -7, 14, -8, -6, -2, 2, 8, -6, -7, -3, 0, -12, 7, -8, -1, -9, -11, -10, -3, -8, -2, 7, -5, -9, 4, 6, 4, -1, 2, 6, -3, 0, -17, -16, 0, -4, 8, -10, -2, 4, -2, -1, 15, -5, -7, 3, -7, -6, 0, 9, -9, 6, -7, 3, -3, -7, 10, -13, -2, -1, -5, -6, 20, -2, -1, 25, -2, 0, 2, -7, 9, 1, 0, 2, -4, 7, 0, -15, -3, -16, -3, 0, 9, 1, -13, 9, 7, 14, 1, -13, 5, 2, 3, -8, -18, -2, 10, -9, -5, -1, 2, 0, -7, -21, -3, 10, -6, -7, -3, -8, -11, 2, -11, -5, 1, -5, 1, 5, -6, 3, -9, -11, 12, -1, 2, -2, -2, 8, 1, 4, 7, -2, 1, -7, -8, -8, -6, 2, 3, -1, -1, -4, -5, -13, -6, 0, 2, -3, 9, -7, 4, 
  -13, 5, 0, 12, 30, 34, 11, 14, 3, 15, -10, 31, 0, -12, -16, 24, -22, 37, 1, 4, -8, 19, -5, 3, 6, 31, -21, 10, 14, 15, -3, 17, -9, -18, 9, 6, -24, 27, -5, -1, -15, 21, -33, 31, 4, 24, 17, 24, 17, 6, -1, 5, 10, -31, -37, -3, -19, 15, 12, 22, -25, -9, -27, -10, 2, 1, -16, 25, -7, 33, -7, -10, 2, -8, -5, 16, -35, 25, 2, 21, -14, 20, -18, -20, -1, 17, -10, 2, -13, 7, 6, 16, -5, 25, 8, 10, -19, 2, 13, 5, -4, 26, -11, -8, 29, 9, 27, 18, -16, -10, -3, -8, -21, 46, 17, -18, 7, 20, 38, -2, 9, 21, 2, -6, 18, 9, 18, 18, 20, 23, -12, 9, 11, 14, -21, 3, -16, 24, 55, 36, -13, 14, -7, -4, 15, 8, -6, 5, -33, 11, 13, 35, -3, 33, 18, 10, -16, 30, -12, 13, 16, 48, 3, 13, -18, -7, 12, 16, 6, 22, -6, 18, 12, -22, -1, 22, -9, 48, -10, 5, 8, 36, 1, 5, -19, -20, 4, 2, 4, 29, 2, -8, 10, -12, 0, 0, -21, -11, -10, -3, -18, -7, -8, 9, -24, 13, -19, 3, -31, -5, -15, -5, 3, -8, 4, -7, -6, -20, -21, -5, -6, -10, -11, 25, -4, -42, -1, -12, -12, -13, 12, -15, -19, 17, 9, 5, 15, -25, -40, -19, -30, -5, 23, -4, -11, -16, 13, -22, 30, -25, -14, -36, 4, 9, -6, -21, -15, -20, 13, 24, -23, -11, -27, -3, -23, -15, -34, -3, -17, -13, -6, -5, 1, 3, -2, 23, -22, -5, -7, -9, -27, 18, -16, 9, -3, -3, -9, -5, -18, -5, -1, 8, 16, -2, 25, 5, -2, -9, -25, -9, -21, 60, -13, 15, -2, 4, -14, -9, 30, 9, 31, 4, 20, 15, 6, 13, 3, -15, 7, 32, -8, 32, -5, 9, 3, -14, 13, -18, -2, -5, 24, -11, 12, 12, -16, -12, 6, -8, -9, 19, -11, 14, 18, 24, -27, -21, -3, -16, -21, -14, 3, -18, -4, -3, -3, -9, 1, -11, -34, 1, -10, 3, 8, -22, -40, -7, -23, -4, -12, -12, 4, -11, 4, 9, 4, 11, 17, -19, -17, 9, 8, 26, -6, -19, -7, 11, 8, -29, 0, -16, 6, -7, 7, 23, 15, -11, 6, -10, -13, -2, 5, 11, 9, 8, -11, -1, 11, -25, 39, -28, -19, -6, -7, -9, 0, -21, -2, -20, 10, 10, -6, 6, -7, -22, -28, 8, -11, -37, 0, -32, -8, 22, -24, 1, 27, -24, 2, -9, 4, 32, 1, 17, 2, 5, -4, 6, 11, -12, 0, -13, -30, -8, -11, 4, 26, -30, 14, -24, -8, 3, 6, 9, 6, 6, -7, -18, 17, -9, 14, -25, -20, -21, -14, -1, 1, -14, 3, -23, 27, 19, -11, -2, 7, 1, -14, -22, 24, 17, 6, -6, -22, 0, -15, -7, -22, 6, -4, 8, 21, 11, -7, 20, -2, -16, -4, -5, 10, 11, -10, -14, 15, 18, -18, 18, 15, 37, 7, 4, 3, 29, -2, 8, 11, 11, 14, 11, 6, 43, 16, 11, 5, 3, 8, 11, 24, 23, 6, 29, 25, 8, -3, 6, 10, -5, 2, 11, 18, 18, 0, 1, 18, 8, -38, 30, 7, 16, 12, 4, 12, 13, 6, 26, 19, -29, 11, 7, 8, 12, 6, 8, -16, 12, -18, 8, -3, 20, 8, 15, 9, 20, 2, 5, 20, -38, 5, 19, -11, 17, 18, 16, -23, 3, -12, -27, -9, 34, 3, 35, 15, 22, 
  -36, -25, -27, 14, -12, -24, -17, -22, -40, -31, -5, -41, -5, -19, -8, -25, -20, -30, -10, -8, -22, -27, -16, 0, 1, -5, -6, -23, -42, 3, 5, -39, 11, -27, -23, 18, -16, -21, -28, -26, -20, -23, -11, -18, -25, -19, -11, -5, -25, -7, 4, -2, -7, -22, -6, 8, -13, 17, -6, -13, -9, -12, -28, -8, -39, 15, 21, 15, 8, 16, -5, 9, 6, 4, 20, 30, -2, 7, 10, 3, 1, 38, -8, -9, 3, -18, 15, -12, 21, 23, -2, 7, 15, 9, 26, 15, 4, -31, 49, -13, -4, 25, 9, -14, 18, 22, 20, 3, 19, -1, -14, -4, 7, 69, 43, 13, 14, 5, 18, 11, -9, -15, 2, 17, 35, -14, -10, 32, -7, 13, -4, -15, 8, -14, -32, 11, -6, 10, 3, 12, -4, -24, 3, 8, -3, 0, -35, 19, -15, 15, 11, 1, -11, 13, 7, 10, -28, 33, -30, 1, -30, 31, -17, -11, -24, -5, 25, 11, -18, 33, -9, 8, 8, -31, -16, 13, -32, 20, -10, -13, 7, 14, -27, -20, -1, 8, -45, -11, 33, 23, 2, 9, 32, 18, 8, -2, -7, -21, -14, 43, 7, -2, 13, -5, 7, -2, 5, -56, 6, -51, -34, -2, -15, -4, 4, -51, 8, -15, 41, -7, 9, -47, 13, 2, -13, -11, 5, -43, 1, -15, -5, 29, 6, 39, -35, 2, 4, -10, -14, 2, -7, 46, -16, -4, 0, -15, -29, -10, 3, -22, -40, -18, -34, 42, 30, -22, -23, -7, 20, 12, -37, -22, 12, -22, -17, -11, 5, -6, 14, -10, -13, -18, -1, -22, -21, 4, -2, -11, 1, -10, -72, -26, -44, -19, 6, -4, -15, 8, -1, -6, 15, -2, -32, -43, -41, 17, -48, 3, -24, 15, -34, -16, -43, 4, 16, 31, -35, 8, 21, 17, 23, 12, -9, -16, 1, 4, -14, 5, -10, -15, 4, 17, -20, 18, 5, 21, 2, 16, -12, 15, 5, 9, -11, 6, 14, -18, -16, 10, -8, -12, 2, 19, -23, -6, -1, -7, 31, 11, -20, 3, 20, -10, -6, 1, 8, -7, -10, 17, -10, -12, -4, 7, -13, -16, -2, 2, 14, 7, 6, 13, 1, 15, 19, 11, 16, 10, -3, -5, -12, 44, 12, -2, 2, 23, 4, 10, 6, -8, -2, -6, 11, 3, 6, 19, 15, -14, 19, 3, 1, 2, 23, 7, 20, -1, -2, 21, 3, -3, 10, 0, -21, 7, 8, 6, 7, -1, 16, -5, 3, 7, 13, -18, 14, 21, -3, 16, 19, -19, 5, -31, -19, -5, -11, -24, 0, -19, 1, -32, 28, 5, 26, 10, 13, 29, 27, 5, 24, -3, 4, -6, 17, 13, 7, -17, -11, -8, 4, -7, 20, 23, -3, 21, -8, -9, 18, -10, 14, 10, 24, -6, 1, 1, -9, 48, -16, -9, 3, 14, 11, 4, -6, 0, 6, -30, 10, 3, -6, 18, -6, 2, -23, -1, -9, 13, -18, 1, -25, 19, 6, 11, 5, -2, 5, -6, -8, -7, 4, 8, -1, 12, -18, 0, 8, 13, -4, 13, -18, 7, 13, -7, -13, 35, -3, -5, 1, -15, -5, 11, 21, -5, 5, -7, 8, 25, 4, -15, -9, 15, 22, -12, 10, 3, -13, -22, 16, 0, -9, 3, -7, 2, 9, 4, 12, 20, -5, 8, 1, -1, 17, -7, -3, 8, -13, -14, 13, 14, -5, -1, -14, 20, 11, 5, 5, 0, 3, 6, -15, 17, 25, -5, -2, 16, -20, -16, 12, 15, -3, 11, -11, 1, 14, 24, -8, 2, -6, -8, -6, 26, 24, -13, 
  -2, -11, 4, 0, 4, -3, -6, -8, -6, 6, -4, -1, -2, -11, -8, -9, -7, -10, 4, -7, 0, -6, -4, -8, -8, -7, -7, -1, -9, -4, -5, 3, -5, -4, -3, -3, -11, 1, 3, -7, 7, -3, -12, 0, 0, -6, -5, 2, 5, -11, -7, 8, -2, -9, 0, 2, 0, -6, 3, 1, -11, -3, 4, -6, 3, 7, -1, -1, -6, 3, -3, -6, 0, 2, 5, -2, -2, -6, -3, 6, -10, -9, 1, -6, 7, -9, -10, -3, 0, -3, -5, -5, -2, -1, -6, -8, -11, -2, -9, -4, 2, 4, 0, 4, -4, -4, -11, 1, 4, -7, -3, -2, 2, -6, -3, -9, -8, 9, -7, 2, -10, 1, 5, 1, -9, 2, 5, -4, -3, -1, -7, 1, -12, -14, -4, -12, -1, -5, -6, -4, -11, 0, -2, 7, -8, 6, -1, -12, -1, -4, -7, -10, -14, 0, -9, -9, -4, 0, 5, -9, -1, -12, -3, -11, -4, -8, 2, -14, -7, -2, 2, 0, 2, 5, -10, -12, -7, 1, -2, 2, 2, -10, -6, -5, -3, -10, -1, 4, -7, 4, 6, -10, -2, 2, -4, -13, -10, -5, -1, -2, -4, -6, -3, -2, -13, 5, -10, 0, -4, -1, -2, 5, 1, -12, 6, -9, 0, 3, -9, -7, 5, 5, 0, 9, 1, -3, -1, -11, -1, 5, -8, 0, 0, -8, -8, 2, -8, -4, -10, -9, -4, -13, -11, 3, 0, 0, -1, -1, 2, -3, 0, -5, -2, 5, -11, 1, 8, 3, -5, 0, -5, -3, -6, -16, -6, -5, 6, -6, 6, -2, -2, -3, -4, -5, 4, -1, -9, 1, 1, 2, 2, -5, -7, -7, 0, 5, -9, 1, -6, 8, 0, 4, -1, -12, -6, 1, -11, 5, 5, -7, 5, 9, 0, -2, 2, -6, -5, 5, -2, 6, -12, -3, 3, 3, -4, 6, -4, 3, 0, -11, 5, 2, -9, -1, 1, -11, -10, -1, -3, 6, 4, 3, 4, -5, -5, 0, -1, -11, 7, -11, 3, 8, -1, 4, -8, -2, -4, -8, 4, -3, -4, -5, -2, 2, -10, -1, 3, 2, 0, 0, 3, -5, -11, -8, -4, 3, -7, -6, -4, 1, -1, -6, -3, 8, -7, 4, 4, -5, -2, -6, 4, -5, 2, 7, -1, -8, -9, -3, 0, -12, 12, -3, -10, 2, -9, -11, -4, 7, -6, -5, -1, -11, -12, -2, -4, -7, 5, -3, 0, -15, -5, -1, -7, 10, -6, 7, -8, 0, -10, 5, 2, -5, -5, -9, 5, -2, 4, 1, 5, -3, -9, -1, 2, 0, -7, 7, -8, 0, -4, -2, -3, 0, -12, 2, -1, 1, -9, -12, 0, 1, 0, 5, -9, -7, 4, 0, 2, -3, -1, -8, -10, 4, -2, -9, 7, 3, -7, -10, -5, -11, 6, 7, -11, 6, -13, 4, -11, 5, 5, 3, -6, -8, -10, 3, -7, 6, 0, 0, -6, -1, 4, -1, 2, 4, 5, 2, -9, -4, 5, 0, 2, 6, -7, -3, -4, -6, -13, -7, -14, 0, 2, -10, -13, 0, 7, -9, -9, -9, 0, -13, 0, 7, -8, 1, -1, -8, -12, 1, 6, -16, 4, 0, 5, 5, 7, -2, -12, -3, 9, 1, -7, 1, 2, -16, 6, -9, -2, -8, -10, -10, -3, -2, -11, 7, -7, -4, -10, -8, -7, -6, -7, 5, 1, -8, -3, 3, 4, -11, 5, -12, -5, 1, -11, 2, -6, -4, 2, -7, 7, 10, -1, -3, 8, -8, -4, -9, 7, 1, -6, -1, -12, 1, -6, -4, -3, -1, -1, -8, 6, 6, 
  27, 23, 35, 1, 9, 17, 5, 19, 14, -9, 9, 18, -32, -5, 19, 3, 40, 15, 15, 31, 31, 5, 26, -4, 17, 30, 6, 9, 12, -15, -14, 8, -17, 13, 10, -7, 24, 18, 30, 21, 29, 12, 43, 15, 4, 27, 17, 7, -3, -20, -12, 25, -17, 11, 42, -1, 15, 1, -1, 0, 36, 12, 46, 27, 21, 19, 24, -14, 24, -28, -35, 6, -11, -19, -12, -28, 22, 1, -13, 25, 1, -39, 4, 44, 0, 7, 43, -5, 26, -18, -10, -28, 10, -41, -28, -28, 5, 1, -4, 32, -37, -12, -16, 18, -17, -1, 16, -29, 25, 11, 15, -26, 4, -40, -45, -3, -34, -5, 8, 48, -49, -19, -51, -6, 0, 1, -45, -9, -40, 27, 1, -3, 4, -14, -10, 5, -46, 2, -27, -7, -9, -19, -48, -26, 1, 18, -2, -26, -38, 4, -17, 0, -19, -3, -8, -25, -9, -1, -25, -37, 13, -25, -14, 2, 15, 30, -30, 17, 0, 5, -7, -5, 6, 0, 1, 7, -4, 8, 7, -15, 7, -34, 4, 13, 7, 4, -7, 19, -2, -12, -1, 5, 18, -8, 3, 7, 6, 0, 4, -15, -11, 6, -2, 1, 1, -2, 15, 12, -4, -5, -17, 2, -24, 3, -3, 1, -6, -2, 22, -13, 1, 27, 5, -40, 3, 7, -8, 15, 1, 18, 0, 20, 30, -3, 2, 28, -5, 23, 24, 9, 24, -4, -2, -23, 14, 22, 45, 20, -21, 0, 7, 18, 18, -10, -15, -1, 47, 19, -11, -14, 21, 8, 33, -28, -2, 4, -14, 4, 13, 32, 0, 30, 18, 5, 11, 1, 39, 19, -48, 11, 27, 4, 43, 10, 5, 1, 5, 3, 3, -9, -16, 3, -2, 4, 20, -22, 33, -12, 9, 15, 1, -14, -14, 6, 7, 15, -3, -6, -29, 5, -3, 4, 17, -14, 8, 9, 12, 1, 5, -14, 10, -4, -5, -4, 3, 16, -22, -7, -26, 0, -8, 7, 16, 4, 33, 5, 25, -7, 8, -30, 12, -38, -2, 26, 11, 19, -12, -13, -36, 1, -4, 3, 13, -9, 20, -9, 8, -7, 1, -26, 9, 3, 14, 31, 1, 10, -9, 13, -13, -4, 4, 10, 8, -19, 10, -10, 25, -5, -29, -52, 0, 22, 13, 4, 9, -5, 31, -8, 15, -8, 6, -6, 6, 2, -5, -3, 21, -17, 14, 13, 12, -36, -1, 4, 11, 1, 28, -19, 4, -21, 9, -2, -4, 9, 8, 7, 16, -11, 4, 33, 11, -21, 23, -27, -5, -15, 1, 19, 3, 5, -2, -11, -2, -6, -10, 3, 13, 6, -11, 3, -8, -20, 9, -19, -12, 2, 5, 6, 14, 11, -18, -8, 12, -22, 4, 23, -1, 5, -31, 4, -2, -11, 0, 30, -9, -17, -13, -5, -2, 25, -12, -4, 34, -18, -2, 21, -4, -5, -5, 5, -15, 10, -18, 14, -27, 7, -31, -28, -25, 5, 1, -2, 19, 2, -8, 7, -23, -17, -50, -30, 5, -15, -5, -4, -34, 6, -8, -13, -22, -12, -16, 1, 5, 6, 21, -11, -6, -36, -32, -44, 12, -33, 14, 2, -22, -13, 6, -26, -13, -6, -29, -30, 5, -22, 18, -2, 4, -38, -36, -2, -1, -3, 17, 8, -22, -37, 20, -9, 27, -25, -11, -14, 1, -23, -12, -6, 21, -49, -22, 10, -22, -7, -21, 4, -15, 3, -1, -26, -6, -3, 10, -6, 7, 4, -10, 10, -17, -21, 34, 27, 8, -7, -17, 9, 21, -1, 14, 1, -38, 47, 1, -22, 29, 15, 20, 22, 0, 8, 22, 2, 
  -23, 18, -34, 24, 1, -8, -46, 40, -36, 6, 32, -9, 2, 13, -24, 5, -30, 36, 18, -30, -14, 34, -16, 19, -10, 0, -28, 43, -19, 15, 31, 12, 18, 11, -14, -4, -32, 39, 20, -32, -5, -1, -13, -11, -5, 4, -22, 8, -8, 7, 4, 3, 0, -4, -6, 4, -26, 2, 9, 0, 8, 30, -16, 17, -17, 21, -4, 23, 4, -5, 13, 29, -3, -5, 2, -2, -17, -5, 55, 0, 28, 60, -25, 12, 6, 7, -1, 22, -36, 9, 30, 32, 19, 35, 21, 30, 12, -2, 17, -22, 15, 9, 28, 9, 16, -6, 2, -4, 25, 14, 20, 27, 20, 6, 7, 13, 22, 9, 4, 17, 42, 29, 32, -20, 17, -16, 22, 6, 25, -8, 16, 19, -11, 29, 12, 6, 21, -7, 17, -14, 18, -8, 0, -24, 28, 37, 2, -9, 17, 10, 13, 11, 14, -7, -7, -1, 5, 9, 2, 0, 31, -28, -7, 5, 16, 14, -18, -8, -34, 31, -3, 11, 22, 12, 4, -8, 19, 1, -13, -4, 0, -70, 6, 40, -9, -14, 2, 16, -16, 7, 0, -2, 9, -18, -28, -1, 1, 4, 6, -17, -4, -24, -7, 4, 0, 7, -13, 16, -8, 5, 50, 1, -14, -17, 5, -4, -17, -6, 13, -9, -6, -21, -14, -20, 3, -5, 4, 6, -14, 2, -28, 16, -1, -24, 5, 6, -2, 13, 14, -26, 25, 10, 9, 5, 24, 13, 18, 4, -12, 9, -26, -1, -5, -25, -27, 0, 31, 10, -1, -17, 10, 10, 28, -18, -3, -11, 7, -2, 21, 17, 21, 0, 24, -18, 16, -7, 9, 12, 1, 33, -11, 28, -10, -10, 9, -3, 5, -18, 14, -13, 34, -9, 2, 29, 13, -4, 4, -3, 14, 38, 1, -16, 23, -4, 8, 6, -21, 16, -62, -9, -24, 0, 1, -8, -29, -12, 5, -2, 18, -15, -18, 20, 9, 3, 11, 0, -13, 12, -28, 1, -35, -13, -21, -8, -7, -1, 4, 5, -10, -75, -6, -32, -9, 15, -5, 5, -10, -8, -11, 16, -22, 15, 20, -31, -5, 13, -18, 15, -28, 4, -1, -6, -23, 34, 3, 16, -5, -13, -12, 2, 7, 18, 7, -4, 20, -5, -23, 2, -11, -5, 9, -4, -23, 26, 6, 10, 7, 1, -15, -2, -13, 10, 16, -3, 20, 2, 7, -1, 2, -30, 2, -36, -11, 4, 9, 19, 2, -15, -14, -13, -1, 20, 17, -14, 16, -1, 12, -11, 9, -3, 20, -36, 20, 4, 9, 10, 26, -8, -10, -14, 1, 18, -9, -9, 1, -17, 3, -5, -5, -22, 15, -4, 4, -12, 22, 21, 4, -8, -7, 10, 8, 3, -4, -2, 15, 23, 14, -4, -9, -16, 12, -40, 15, 3, 17, 23, -10, -2, 0, 3, 6, 2, -2, -1, 3, 11, 14, 18, 4, -7, 14, -16, 15, -21, 13, 17, 14, -16, 8, -4, 4, 8, 0, 35, 10, -10, 13, 13, -4, 4, 25, -19, 4, -18, 15, 25, -1, 9, 1, 5, 7, 10, 15, 5, 15, 14, 6, 5, 2, -20, 11, -26, 18, -15, 21, 16, 4, -3, -1, 7, 12, 20, 1, 13, 17, 1, 21, -8, -8, -1, 15, 14, 28, -26, 18, 6, 22, 7, 10, 2, -10, 12, -10, 9, 12, 17, 21, 13, 0, -2, 15, 1, 17, -11, 14, 10, -1, 3, 15, 5, -8, 5, -4, 1, 1, 7, 23, 9, -25, 15, 8, 12, 24, 2, -5, 12, 9, -5, 18, 20, 0, -16, 12, -14, -4, -10, 4, 12, -43, 14, 
  33, -13, 60, 2, 16, 5, 11, 26, 34, 41, -82, -40, 33, -79, -38, 27, 4, 20, 14, 21, -26, -19, 6, 27, 1, -36, 9, 11, 57, -15, -15, -35, -21, -59, -78, -10, -30, 15, 23, 31, -71, 16, -48, 3, -3, -19, -15, 4, 16, 25, 31, 2, 3, -2, -88, 17, -53, 21, 17, -25, -50, 17, -61, 41, -19, 4, -78, 10, -22, 24, 29, -18, 12, -54, -38, 25, -119, 8, -13, -6, -32, 24, -44, 43, -39, 9, -59, -4, -93, 11, 26, -2, 24, -1, -7, -14, -68, 8, -63, -49, 3, 33, -23, 26, -61, -19, -3, -23, -71, -15, 2, -22, 16, -16, -21, -7, -19, -23, -68, -34, 16, 10, 0, -8, -63, -52, -2, -60, -28, -10, 38, -20, 1, -9, 5, -24, -2, -63, -57, 13, 7, -11, 8, -12, -54, 1, -2, -79, -35, -13, -1, -13, -12, -46, -19, -15, -15, -45, -76, -47, 5, -23, -31, 2, 7, -2, -16, -18, -29, -35, 11, 2, -8, -1, 22, -28, 20, -69, -11, -34, -1, -23, -8, -38, -8, -7, 45, -56, 16, -17, -5, -3, -19, -3, 6, -13, 7, 3, 9, 7, -16, -6, -4, -10, -5, 10, -4, 22, 7, -1, -34, 1, -26, -1, -9, 1, 4, 4, -17, -16, -8, -9, -7, -21, 15, 1, -17, 7, 4, 7, -31, -9, -75, -35, -3, 8, -16, 7, 6, 8, 3, -14, -3, -45, 21, 16, -3, 10, -8, 1, -29, 20, -50, -1, 9, -13, 12, 19, 18, -23, 9, 12, 28, -28, 16, 4, 41, 21, 22, 11, -15, 3, 15, 2, 5, 5, 26, 18, 2, 14, 18, 24, -1, -10, -17, 1, -14, -1, 19, 18, 4, 19, 32, 37, 14, 27, -14, 3, 2, 28, 32, 29, 15, -3, -6, -21, 14, -5, 16, 3, -8, -21, 12, 7, 29, -22, 13, -18, -10, 9, -9, 1, -6, 33, -20, -4, 5, -22, 5, -7, -3, -30, 1, -3, -20, -4, -3, -23, -2, 24, -26, -10, 1, 15, -9, -15, 18, -10, 0, -18, -4, -10, -3, 24, -17, -36, -18, -20, -6, 25, -17, -11, 9, -7, 2, -24, 5, 5, 3, -9, -14, -7, -6, -4, -5, -25, -17, 7, 2, 6, -21, -20, -8, -3, 3, -3, 0, -6, -3, -1, 10, -8, 3, 5, 4, 19, -15, 7, 9, 21, -10, 14, 9, 4, 24, 2, 6, -3, 8, 5, 10, 18, -9, 14, 2, -1, -7, 1, 13, 28, 16, -14, 3, -13, 6, 32, -3, 4, -24, 5, 27, 16, 8, 23, 11, 9, -1, 24, -12, -4, 13, -2, 18, -6, 27, 14, 7, 30, -21, 8, 7, 34, -16, 16, 6, -1, 15, 9, 0, -25, 25, 11, 11, -13, 28, 18, 4, 3, -14, 8, -6, 27, -18, 34, 14, 4, 14, 7, -5, 4, 12, -4, 18, 0, 30, 8, 6, 23, 0, 10, -25, -8, -17, -5, -5, 6, 15, 22, -9, 13, 11, 22, 20, -13, 4, -11, 16, 21, 31, 8, -3, -19, 4, -32, -31, 22, 20, 1, -18, 20, -32, -38, 1, 3, 1, 9, -3, 1, 13, 4, 8, 19, -21, 11, 3, 3, -6, 7, -3, 13, -8, 3, -8, 20, -2, 20, 0, 12, 0, 18, 5, 11, 12, 1, 16, 24, -12, 5, -16, 11, 14, -10, -8, 6, 6, 16, -9, 22, -25, 26, 7, 30, 20, -2, 15, 17, 3, -8, -38, -29, -7, -9, 12, 1, 14, 26, -3, -12, -16, -6, -8, -16, -19, 14, 1, -23, 16, -13, -27, -13, 
  4, 12, 13, -19, 12, 20, 18, -2, 5, 13, -9, -1, 1, 3, 20, 30, 10, 5, 1, 11, 9, 32, 13, -7, 8, 3, 2, 1, 30, 4, 7, 4, -6, 11, 6, 20, 2, -8, -3, 8, 10, -10, 2, -3, -2, 8, 7, -8, 26, -16, 5, 3, -18, 12, 1, 7, 9, -3, 24, 22, 1, -3, 5, -8, 11, 13, 0, 5, 9, -7, -10, 3, -7, 1, 4, -8, 11, 13, 18, -6, 13, -12, 2, -28, 7, 16, 3, 3, 20, -3, -24, 17, 6, -11, -7, 28, 5, 11, 25, 20, 26, 29, -9, -26, 0, 7, 11, -7, -22, 15, -7, 0, 13, 3, 7, 15, 11, 17, -6, 6, 23, 3, 7, -14, -7, -4, -2, -1, 3, 6, 0, -8, 11, 3, -1, 36, 5, -8, -4, 24, -2, 10, 16, -2, 8, -2, 12, -2, 1, -8, -1, -23, -9, 18, -3, -14, 19, -4, 3, -7, -17, -15, 10, 12, -7, -26, -6, 9, 4, 26, -12, -8, 16, -24, -30, 22, -11, 9, -7, 10, -15, 1, -12, 18, -32, -15, 3, 14, -2, -2, -2, -3, 30, 3, -6, 15, -29, -7, -17, -12, 0, 6, -18, 2, -5, -5, -5, -2, -15, -19, 49, 9, -6, 3, 19, -8, -18, -35, 5, -10, 2, -20, -2, 28, -2, -15, 19, -18, -12, -20, 15, 3, -17, 19, 8, 8, 14, -24, 2, -14, -7, 26, 0, 20, -4, -6, -10, -1, 10, -13, 17, -1, 6, -6, 28, 2, -7, -14, 5, 10, 3, -3, -1, 29, 0, 5, -9, -2, -19, 2, 27, -3, 0, -5, 5, 2, 18, -1, 3, -4, 16, -2, 9, 10, 12, 7, -20, -12, 5, -8, 26, 11, -6, 9, 30, -2, 23, -4, -10, 8, 37, -14, 28, -18, -2, 23, 7, -13, 2, -2, -2, 10, -13, 21, 27, -3, 29, -5, 14, 0, 41, 0, 40, -10, 6, -2, 10, -10, 20, -16, -12, 7, 1, -7, 11, -26, 27, -9, 5, 2, 0, -21, 31, -5, 14, 1, 32, -9, 32, -7, -11, 1, -14, 1, 24, -4, 19, -1, 4, 5, -11, -16, 3, -17, 13, 14, 38, -3, 10, -12, -18, -10, -12, 8, 28, -16, 18, -2, 20, 35, 21, -8, -20, -13, 11, -1, 9, 1, -11, 10, -27, 21, 5, -24, -11, 1, -6, 3, 19, 2, 10, 23, -24, -27, -5, 20, -7, 15, -35, 26, -20, 8, 3, -8, 24, -4, -3, 6, 6, -13, 17, 8, -6, -17, -6, -2, -24, 11, -23, 12, -18, 11, 22, -28, -5, 19, 6, 3, 17, -1, 5, 37, 0, -5, -4, -22, 9, -8, -7, 2, 19, -4, 17, -9, -5, 24, 12, 0, 22, -5, -4, 7, 4, 12, -11, -12, 9, -18, -4, -8, 21, -10, 8, 12, -7, -4, -7, -10, 12, -4, -1, -11, -5, -8, -13, -13, -14, -10, 7, -10, 5, -24, -12, 6, 10, -2, -10, -14, 4, -8, 6, -11, 3, -4, -2, -1, 7, -3, 11, -19, -6, -10, -16, 16, 0, 6, 14, -12, 19, -2, -7, -2, -6, -15, 11, -3, 23, -7, 13, -6, -6, 0, -15, 7, 9, -7, 15, 6, 19, 3, -8, 1, -5, -13, 15, 11, 5, 6, 3, -6, -8, -5, -26, 11, -9, 7, -2, 5, 10, 13, -5, -3, 5, -17, 12, 15, -11, 13, -3, 6, -11, -2, -12, 1, 0, 15, -2, 16, 3, 9, 7, 14, -4, 20, 15, -8, -1, 39, -1, 18, 3, -3, 15, -9, 4, 20, -10, 24, 42, -3, 
  -1, -7, -8, -8, 4, -11, -3, 3, -2, -6, 10, 1, -6, -1, 0, -1, 5, 3, 3, 5, -6, -1, -2, -7, -4, -7, 6, 1, -12, -1, -7, 0, 9, -9, 1, 2, -11, -5, -5, 6, -1, -3, -13, 0, -9, -9, 2, -2, -1, -9, 3, -1, -3, -2, -10, 4, -2, -5, -8, 4, -13, -10, -2, -8, -11, 3, -9, -2, -10, 0, 0, -8, -4, -11, -10, 3, -8, -3, 1, 5, -10, -8, 5, 2, -11, -8, 0, -13, -12, 3, 0, 1, -5, 0, 1, -6, 2, -11, -1, -4, 3, -2, -5, 1, 6, 4, -10, -14, -3, 4, 5, -9, 2, -11, -3, -8, 7, 3, 0, -1, -2, -8, -10, -11, -4, 3, -7, -1, -9, -8, -7, 7, -12, -3, -1, 3, -12, 4, -1, 2, -11, -7, -4, 3, 0, 3, -2, -3, -9, 2, -3, 5, -12, -6, -8, -9, 2, -6, 6, -8, -8, 4, -5, -1, -10, -11, -11, -11, -4, -11, -6, -9, 3, 0, 2, -10, 5, -10, -9, -8, 4, 3, -4, -10, -3, 1, -7, 2, -3, 8, -3, -7, 7, -2, -7, -10, -13, 3, 1, -2, -10, -4, 0, 3, 0, 7, -1, 6, 2, -4, -10, -1, 0, 4, -3, -5, -1, -7, 6, -2, 3, 5, -7, 5, 4, -8, 3, 7, -11, -5, -9, 3, -10, 5, -2, -5, 0, 0, -9, -11, 6, -1, -9, -9, -3, -3, -7, -9, -1, -8, 7, -11, -7, 3, -7, 1, 6, 6, 0, 2, -10, -9, 7, -7, -8, -2, -5, -15, -4, 3, -8, 2, 4, -1, -6, -13, 7, -6, 6, -1, 4, -3, 1, -2, 1, -3, -10, 1, -8, 3, -3, -11, -9, -8, -9, 2, -2, 2, 7, -1, -2, 0, 1, 0, 4, -13, -4, 5, -8, -5, -9, -6, 7, 0, -1, -5, -12, -3, 3, -2, 3, -10, -9, -9, 2, 1, -13, 3, -10, 0, -4, 1, 1, 6, -2, -8, -2, 0, -11, 0, -7, -9, -7, 6, 2, 1, -13, -4, -6, 0, 0, -1, 1, -1, -7, 2, -9, -8, -4, 1, 3, 7, 4, 2, -5, -14, -11, -10, 5, -6, -7, -7, 9, -12, -13, -6, -9, -2, -2, -11, -14, -4, -13, 5, -1, 3, -12, -11, -5, 4, -4, -2, -8, -2, -4, -12, -7, 2, -10, 4, -6, 0, 5, 3, 6, -7, -4, 1, 4, 2, -2, 1, -2, -7, -9, -1, 2, -13, -7, -3, -3, 2, -5, -7, -4, 2, -11, 4, -6, 1, -7, 3, -2, -2, 4, -6, -2, -5, -10, -5, 1, 3, -5, -9, -11, -11, -7, -2, -2, -5, -1, 2, 2, 1, -7, -9, -9, -9, -7, -7, 2, -9, -13, 1, 5, -3, -1, 0, 3, 7, 4, -8, 6, -12, 5, -11, -12, 2, -7, -10, 4, 3, 0, 2, -11, -11, 4, -10, 1, 7, -2, -8, 6, -8, 1, -11, -8, -3, 0, -2, -8, 5, 5, 2, 1, -5, -9, -10, -9, -9, 4, 1, 5, 2, -1, -4, 3, -7, -8, -5, 1, -2, -7, -4, -10, -2, 0, -2, -2, 5, -2, -9, 11, 0, 3, -3, 2, -11, -4, -2, 4, 8, 4, 5, -9, -14, -9, 2, -7, 6, -3, 4, -5, -2, 2, -8, -7, -6, -10, 1, -8, -2, -14, 2, -11, -14, -8, 5, -2, 2, 6, -3, -5, -4, 4, -9, 3, -3, -10, -4, -6, -7, -4, -5, 1, -6, 3, 7, 9, 7, 8, -6, 7, 6, 0, 2, 0, -5, -7, -5, 
  8, 6, 18, -5, 38, 3, 66, -10, 4, -20, -13, 14, -19, 26, 4, -2, 16, 6, 56, -9, 24, -15, 20, -19, 50, -7, 56, 26, 46, 9, 8, 26, -15, 33, 15, 34, 7, 20, 40, 44, 21, 28, 13, -27, 40, 37, -4, 17, 22, 24, 1, 35, -21, 45, 49, 29, 27, 39, 26, 19, 17, 17, 43, -7, 37, 13, 37, 40, 42, 16, -30, 31, -11, -23, -15, -5, 10, 48, 35, 12, -2, 0, -1, 4, 34, 35, 17, 26, 0, 28, -27, 20, 10, -19, -25, 16, -16, 27, 27, 19, -2, 41, -17, -29, 28, 30, -29, 9, -26, 47, 19, 16, 12, -52, 7, 16, -7, 23, 12, -10, -3, 41, -35, 23, 37, 8, 21, 36, -36, 18, 3, -16, 13, -11, -4, -1, -10, 19, 54, -36, -7, 34, -19, 9, -14, 9, -4, 8, -30, 21, 24, 22, 8, 11, -7, -8, -10, 31, 36, 36, 5, 58, 28, 3, -5, -25, 18, -6, -12, 7, 15, 18, -22, 30, -7, -25, -10, -5, -26, -4, 6, -15, 38, 16, -14, -9, 14, -2, 22, -25, -2, -11, 3, -4, 2, 5, -4, -7, -10, 12, -6, -2, -7, 6, 0, -6, 6, -20, -4, -1, -75, 2, 20, -6, 12, -6, -11, -9, 18, 4, -8, 6, 2, -1, -14, -14, 4, -16, 0, 9, -7, -3, 19, 1, 19, 21, -14, -12, 19, 1, -9, -14, -8, 10, 9, 17, -11, -17, -14, -15, 41, 19, -27, -17, -1, -29, -13, -3, -16, -16, -2, 0, -3, -51, -6, 13, -2, 11, -7, -12, -8, 0, -33, 21, 22, 7, 6, -8, -14, -5, 2, -23, 32, -20, -10, 25, 19, -10, -7, -18, -33, 21, -50, 17, 7, -3, 34, 4, 2, 16, 22, -14, 28, -44, -4, -5, 30, -5, 40, 8, -40, -1, -14, 2, 12, 2, 53, 7, -8, 31, 16, 15, 27, -2, -2, -6, 50, 5, 46, 17, -14, 6, 19, -14, 15, 18, 25, 5, 1, 29, 0, 39, 10, -9, -23, -26, 24, -5, 45, 9, 20, -19, 48, -2, 7, 3, 1, -4, 5, 31, -16, 14, -13, 25, -21, -30, -6, 4, 21, 2, 36, -28, 49, -9, -3, 21, -11, -20, 23, 50, -19, 26, -16, 25, -9, -10, 21, -9, 14, -4, 61, -12, -1, 35, -13, -11, -15, -10, 27, 20, -8, 8, -9, 15, -13, 2, 17, 4, 35, 1, 29, 16, 0, 29, -7, 3, 0, 19, 23, 16, 5, 13, -12, 0, -13, 2, 4, 11, 33, -3, 20, 12, 3, 48, 19, -4, 0, -2, 12, 39, 17, -8, 3, -11, 13, 9, -26, 0, 20, -9, 8, 8, -22, 55, 32, -8, 5, -11, -9, 10, 16, -13, 34, 18, 17, 6, -3, 19, 5, -11, -30, -6, -3, -20, -12, -22, 16, 4, -3, 9, -14, 7, 17, 23, -8, -12, 0, 30, 17, 16, 3, -43, 27, -26, -24, 12, -5, 19, -3, -2, -29, 6, -6, 10, -5, -12, -1, 28, 21, 5, 26, -18, 16, 10, -16, 3, -30, 6, 33, 49, -17, 27, -6, 25, 8, 0, 3, 27, 15, 4, 21, 4, 14, 10, -19, 14, -18, 17, 22, 28, -2, 40, -10, 15, 12, -1, -10, 27, 5, 23, 13, -4, 12, 14, -7, 5, -25, 16, 9, -1, -15, 16, 0, 2, -1, 3, -5, 1, 11, 12, 4, 9, -8, 19, 13, -7, -21, 0, 11, 27, -2, 13, 1, 16, 14, 7, 17, 24, 6, -15, -28, -5, -29, 16, 5, -35, 6, 0, -2, 2, 
  -33, -7, 0, 25, -22, -33, 1, -26, 28, -28, 13, -14, 12, 19, 8, 4, -2, -30, 6, 53, -38, 26, -12, 40, 13, 9, 15, -10, 3, -8, 43, 3, 20, 35, 23, -6, -20, -12, 20, 14, -36, 11, 4, 29, 15, 14, 32, -7, 58, -5, 20, -1, -18, 51, 25, -7, 10, -10, -6, 37, 3, 0, 14, -14, 12, -5, 36, 2, 33, -2, -9, 0, -13, 11, 1, 7, 7, 3, -36, 50, -21, 4, 4, -5, -3, -10, 15, 9, 30, -2, -41, -22, -32, -23, -35, 7, -25, 2, 1, 41, -58, -9, -12, -20, -2, -5, -25, 9, -2, 3, -50, -24, -55, -8, -54, 3, -46, 19, -2, 12, -74, -32, -48, -9, 5, -7, -81, 31, -68, 24, -30, -23, -21, -39, -46, 20, -58, 19, -44, -27, -45, 5, -23, 41, -6, -23, 12, 46, -2, 2, -24, -3, 9, -30, -14, -10, -17, 27, 22, -21, 4, 23, -29, -6, -10, -3, -17, 13, -5, 45, 19, -14, 19, 5, 6, 38, -42, 23, 9, 26, -7, 8, 29, 16, 6, 16, -8, -2, -5, 16, 10, 13, 27, 4, 7, -6, 4, -2, 3, -10, 14, 13, 9, -19, 0, -34, 8, -22, 7, 3, 35, 20, 13, 17, 1, 14, 12, 5, -4, 12, -7, 43, 4, -7, -5, 4, -17, 13, 0, 10, 9, -15, 22, 19, 16, -14, -8, 10, -14, 3, 12, -45, -2, -11, 13, 8, 23, 1, -13, -27, -34, 9, 0, -24, -20, -3, 28, 7, 17, -5, 15, 21, 35, 3, 6, 17, 29, 4, 24, 3, -62, 28, 25, -61, 22, 3, 28, 19, 1, 30, 28, 15, 8, 43, -2, 1, 5, 5, -8, 1, -17, -7, 30, -27, 11, -1, -11, -3, 1, 5, -12, -2, -18, 30, 7, -7, -8, -21, -18, 1, 0, -4, 12, -12, -13, 0, -33, 6, -3, 9, 0, -9, -24, -10, 7, -1, -15, -14, -26, -21, 7, -1, -6, 1, -9, -6, -19, 6, -29, 3, 7, -2, 0, 17, -13, 13, -11, -3, -8, -9, -1, -2, -24, -17, -6, -9, -3, -13, -14, 1, 1, -21, -1, 4, -18, -19, -25, -2, -46, -5, -6, -10, -2, -12, -8, 0, 1, -3, -6, -20, -8, -12, 10, -47, -3, -24, 0, -9, 0, -25, -20, -14, -32, 10, -1, -3, -2, -10, -11, -20, -18, -29, -6, -44, 5, 3, 5, -12, 45, -17, -14, -10, -17, 3, -7, 6, -13, -6, 13, 20, -7, 6, -14, -19, 16, 13, -19, 4, -8, 3, -8, 12, -6, 22, 14, 13, -1, 1, 5, 9, 15, 26, -11, 0, 15, 35, -22, 2, -21, 21, -14, 12, 28, -10, 19, 30, 11, 14, -53, 7, 0, -8, -15, -10, 22, 19, 13, -16, 10, 12, 4, 6, 19, -14, 27, -14, 5, -13, -27, -11, 13, 16, -3, -8, -8, 17, 6, -14, 18, -11, 9, 10, -10, 0, 21, -3, 3, -18, -15, 11, -2, 20, -2, -4, -15, 9, 5, -20, -20, -7, -14, 0, 2, -10, 18, 10, -8, -42, 6, 17, -2, 3, 0, -8, 3, -5, 13, -1, -8, -38, -20, -8, -35, -7, 14, -9, 4, -32, 5, 19, 2, -11, 15, -20, 2, -34, 9, 13, 1, -11, -12, -4, -22, 1, 1, 20, 16, -6, 3, 8, 5, 9, 4, -7, 18, -23, 15, 16, 0, 2, -4, 5, -2, 22, 4, 19, 22, 19, 7, 2, -10, 5, 17, -37, 5, -39, 7, -3, 12, 8, -14, -3, -23, -1, 0, 12, 12, 1, -14, 7, 
  -15, -17, 8, 1, -1, 0, -6, -31, 6, -3, -11, -35, -2, -9, -9, -28, -9, -19, -10, 4, -17, -74, -7, 24, 26, -10, 9, -11, 5, 15, 17, -7, 7, -49, -10, 3, -12, -5, -16, 0, -30, -2, -37, 23, 5, 19, -59, 24, -33, 16, 22, -5, 37, -31, 5, 10, -29, 9, -5, -20, 1, 21, -46, -15, 12, 17, -10, 19, -49, 26, 34, 18, 21, 35, 18, 29, 17, 14, -11, -26, 15, 7, 8, -51, 13, 41, 7, 10, 6, -2, -10, 51, -43, 24, 25, 24, 31, 7, -12, -30, 44, 3, 28, -22, 1, 36, 26, 28, 36, -3, -71, -1, -23, 20, 19, 12, 44, -2, 3, 3, 1, -26, 21, -16, 33, -14, 2, 12, -6, 4, -17, 2, 18, -20, -22, 19, 10, -9, 14, 25, -5, -10, 14, 2, -18, 1, -12, 23, 15, 14, 5, 0, -3, -11, -2, 12, -16, 32, -21, -15, -7, -27, -21, -14, 2, 19, -15, -24, -31, 1, -21, -5, 2, -4, 1, 17, -10, 2, 4, -53, -8, 3, -24, -4, 19, 8, 0, -18, 11, 28, -6, -6, 9, 15, 10, 1, 15, -3, 6, 0, 16, 14, 14, 6, 13, -33, 19, -11, 12, -1, 18, -6, 49, 10, -5, -10, 15, -2, -6, 30, -22, 10, 8, 30, -19, 16, 3, 3, 11, -10, 26, 16, -9, 33, -21, -5, -11, -5, 23, 16, 5, 21, -57, 19, -3, -3, -56, 1, -45, 31, 18, 0, 29, 39, 35, 31, -69, 19, 1, -15, 4, 9, -39, -19, -5, -13, 20, -5, -27, -25, -24, -17, -9, -14, 33, -20, 2, -10, -19, -49, -4, -12, -2, -23, -6, -7, 17, -4, 24, -5, -28, -15, 10, -21, -7, 9, 10, -16, 1, 28, -19, -4, -1, -35, 3, -14, 6, 5, -31, -6, -10, -21, -7, 8, 9, 16, -2, -10, 3, 0, -11, -9, 16, -7, 3, -3, 13, -5, -2, 0, -19, -6, -19, -18, -8, -9, -4, -9, -3, 7, -9, 14, 7, 22, 2, 12, 11, 1, 42, 3, 6, -8, 8, 1, -28, 1, -12, -7, 12, 41, -29, 19, 3, 11, 3, 3, 22, 9, 18, 1, 19, -11, 12, 15, -21, 3, -13, 6, 36, 50, -9, 10, -18, 12, -7, -2, -14, -3, -26, 6, 28, 7, 7, 5, -8, 6, -25, 13, -6, -24, -8, 22, -17, -14, -17, 3, -34, -4, -22, 9, -6, 11, -3, 7, 8, -7, -18, 11, -18, -21, 14, -9, -24, -12, -7, 3, 2, 0, -13, -6, -3, 21, -3, 13, 23, -1, -3, 0, -4, -9, 12, 27, -7, -10, 8, 13, -14, 6, -42, 1, -7, 24, 6, 24, 22, -13, 1, -1, 3, -11, 16, -5, 11, -42, 16, 26, -11, -15, -5, -20, -19, 8, -17, 19, 15, 4, 8, -9, -20, -25, 25, -22, 20, -23, 2, -7, 15, 17, 32, -8, 1, 27, -35, -22, 3, 8, 13, 0, 2, -2, 24, 15, 13, 6, -7, 1, 1, 13, 25, 7, -6, 2, -9, -17, -1, 10, 3, 7, -11, -1, -18, -13, -1, 3, 1, -11, 8, 8, 19, 0, -3, -13, -4, 0, 16, -20, -3, -9, -7, -8, -17, 0, -12, -15, 15, -6, 1, -2, 1, 16, -1, 9, 15, 21, 19, -4, 12, 2, -9, -14, 1, -5, -2, 19, 6, 22, 11, -4, -3, 24, -1, -8, 36, -12, 0, 15, -2, -5, -9, -4, 14, 5, -13, 4, -4, 7, -16, -9, 3, -32, 20, 39, -14, -4, -12, -25, -15, 7, -12, 4, 
  -22, 27, -13, 4, -14, -10, 6, -13, -16, -4, 8, -10, 4, -13, -5, 6, -7, -2, 0, -1, -18, -1, -22, -6, -6, 5, 1, -15, 2, 16, 7, 15, 20, 2, 11, 31, -12, -8, 10, 21, -13, 17, -10, -23, -18, -5, 12, 7, 6, -9, 7, 2, -17, 15, 15, 25, 4, -5, 1, -3, -7, -25, -3, -5, -4, 10, 16, -15, 7, -1, -7, 11, -9, 8, 11, 17, -7, 1, 0, 12, -6, -10, -13, 0, 17, -18, 30, -1, 19, 12, -6, 0, 29, -5, 15, -5, 24, -2, 16, 11, -14, -7, -8, -1, 20, -8, -3, 6, 17, 24, 27, -15, 16, 17, 16, -4, 10, -22, 23, 23, 2, 3, -9, 31, -25, 5, -22, 2, 0, 38, 14, 7, 1, -29, -4, -11, -5, 8, -51, 1, -1, 10, -6, 21, -75, -39, -22, -1, -24, 6, -33, -17, -6, -34, -43, -5, -24, -25, -37, -21, 4, 11, -26, 35, -11, -3, -13, 32, -37, -30, -3, -16, 15, -26, -14, 0, -42, -26, 17, 30, 2, -26, -11, 45, 11, 13, -11, 9, -13, -40, 19, 8, 6, 13, 13, -7, -11, -7, 15, -29, 11, 7, 7, -1, 13, 18, 19, -12, 6, 9, -8, 12, -29, 13, -2, 1, 18, 18, 5, -40, 3, 0, 8, -8, 5, 21, -23, 10, -1, 18, -9, -3, 15, 17, -51, 23, -10, 3, -25, 11, 1, -6, -2, 27, -18, -13, 6, -2, -9, 10, -14, -23, 3, -87, -27, -7, 15, -11, -5, -11, 2, -5, 18, 41, -17, -25, 12, -27, -4, -6, -13, -4, 8, -30, -13, -13, 7, -5, -12, -20, 13, -3, 9, 36, -46, -34, -1, -9, 1, -18, 20, -22, 1, -21, -12, -12, -14, -26, -18, -5, -22, -22, -13, 32, -38, -28, -13, -13, 6, -33, 36, -17, -26, 9, 17, -34, 0, -21, -16, 8, -2, -28, -2, 3, -9, -9, 26, -12, -5, -32, -5, 11, -40, 26, 23, -9, 9, -24, -8, 29, 10, 13, 21, -35, -14, -10, 22, -16, 38, -9, -19, -9, -26, -8, 4, -3, 17, -10, 11, 22, -8, -8, 10, -30, -4, -24, 12, 9, 29, -2, -12, -12, -22, -2, -8, -1, 1, 4, 8, 16, -19, -11, 4, -12, -2, -6, -19, -1, -4, -7, -14, -16, -38, -25, -22, 7, -9, -6, -2, 51, -16, 14, -20, -9, -4, 3, -11, 14, -45, 17, 1, 9, 3, 3, -5, 12, -15, 5, 7, -41, -13, 30, -24, -21, -1, -2, -12, 22, -37, 4, 8, 0, 7, 12, 1, 8, -13, 11, 17, -36, -6, -13, -7, 4, 6, 11, -18, 4, -30, 8, -4, 7, 3, 13, -1, 20, -13, 23, 17, -24, 15, -9, 1, -15, 9, 12, 3, 4, -19, -8, -12, 33, -15, -5, 27, 10, 12, 9, 10, -15, 10, 22, -5, 4, 24, 40, 18, -2, -19, -4, -18, 2, 11, -7, 11, 2, 10, 5, 11, 8, 13, -28, -1, 16, 12, 28, -11, 8, 3, 11, -3, 7, 26, -15, -11, 10, 5, 13, -12, -14, 15, -29, 9, 22, -1, 15, 6, -18, 20, -28, -10, 12, 3, 6, 1, -31, -8, 12, -11, 10, -1, 19, -14, 9, -1, 4, 14, -9, -9, -1, -26, -9, -3, 11, -16, -1, 0, 10, 9, 7, -16, 8, -2, 2, 16, -23, 1, 6, 0, 8, -6, -11, 6, -16, -27, -7, -10, 12, 24, 2, -36, 5, -7, -9, 11, -17, -3, 30, 10, 27, -21, -10, 16, 4, -14, 5, -27, 20, 13, 7, 
  -9, 7, -6, -6, 0, -5, 5, 1, -8, -8, -1, 5, 7, -2, 0, 7, 2, -3, -5, 4, -8, -2, -9, 7, -4, -1, 3, -1, 1, 8, 5, -10, -8, -1, 3, -9, 1, 2, -6, -5, 0, -7, 2, -9, 1, -7, 4, -4, -1, -7, -2, -9, 3, 1, 1, 5, 1, 4, -8, -8, 0, 3, -13, -8, -2, -9, 3, -8, -10, -2, -4, 7, -1, 6, 0, -4, 2, -5, -8, -5, -1, 1, -1, -9, -7, 3, -5, -1, 4, -4, 2, 3, -9, -7, 6, -10, -12, -5, -5, -7, -4, 5, -10, -7, -4, 1, -7, 2, 1, -8, 3, 0, -2, -6, 5, -2, -11, -7, 7, 3, -6, 7, -13, -8, -6, -14, -10, -5, -5, 0, -4, -2, 7, 4, -1, -2, -4, -7, 7, 0, -7, 4, -5, -11, -8, -5, 2, 4, 6, -5, 3, 1, -6, -6, 7, -8, 4, 0, -10, 2, 2, -4, -8, -8, 4, 0, -4, -6, 0, 8, -9, -12, 7, -7, 4, -4, 2, 2, -4, 2, -7, -5, -3, -4, -1, 0, 0, 5, -9, 8, 5, -6, -8, 3, -2, 8, -6, -11, -5, -3, -6, -9, -5, 7, -9, 1, -8, 2, -5, -5, -3, -4, 7, -1, 6, 5, -5, 0, -5, 2, -13, -9, 7, 4, -11, -12, -7, -7, 0, 2, 7, 3, -5, 1, -4, -8, 4, -7, 5, -9, 1, -8, -8, -4, -5, 5, -5, -2, 8, 3, -4, -5, 2, -9, -11, 0, -2, 4, 4, -5, -2, 0, 6, 3, 3, -3, -6, -6, 0, -9, 0, -6, -5, 4, -10, -3, -3, -4, -10, -10, -9, -7, -8, -7, 2, -9, -7, -4, 0, -7, 5, -1, -2, 4, -8, 4, 7, -6, -7, -9, -11, 2, -3, -9, 7, -5, -10, -6, 3, -2, -5, -6, -9, 6, -7, -5, -10, -7, -9, -12, 6, -7, -10, -9, -8, -1, 4, -6, -2, -6, 7, -10, -7, 6, -1, -9, 0, -2, 5, -11, 6, 4, -8, -8, -2, 3, -8, 5, 3, 2, -6, 7, -13, -7, 2, -9, 5, -3, -12, 1, 2, 0, -9, 0, 0, -6, -6, 8, 5, -1, 2, 0, -3, -1, 1, 3, 7, 3, -4, -1, 5, -4, 0, -1, 1, -7, -2, -7, -5, -5, -11, 2, -8, -9, -8, -6, -6, 3, -7, 2, -2, -3, -6, -7, -11, 4, 7, 1, 5, -1, 5, -9, -11, -6, 0, -12, -2, -1, 2, -4, -9, 1, 4, 3, 7, 2, -2, -7, -3, 5, -12, 6, -1, -12, -7, 2, -10, 2, 7, 6, -9, -7, -13, -1, 4, -9, -2, -8, -10, 5, 3, 2, -6, 3, 6, -2, -9, 3, 2, 4, -7, -4, 3, -5, -9, 3, -12, 4, -4, -5, 0, -10, -3, -9, 7, 3, -2, -9, -3, -6, -7, -5, -9, 0, 1, 4, 2, -1, -9, 3, -11, -3, -3, -13, 3, -5, 6, -3, 7, -4, -7, -6, -11, -8, 4, 1, -7, -10, 1, 5, 6, 2, 4, 3, -3, -4, -10, -6, 4, -7, -10, -4, 5, 1, -7, 6, 2, -7, -2, -9, 2, -5, 1, -7, -8, -10, 2, -2, -12, -3, 6, 7, 4, 7, -3, -4, -5, 0, 7, -5, -5, 0, 8, -11, -3, -5, 8, -4, -14, -10, 0, 1, -6, -6, -2, -12, -6, 2, -10, -6, 7, -8, 6, -7, -9, -8, -7, 2, -2, -7, -7, -8, -4, 9, 2, -8, -10, -8, 1, -2, 7, -3, -1, -10, 4, 1, 6, -8, 4, 3, 
  -30, 14, -73, -15, 6, -7, -73, 22, -76, 39, 49, 6, 42, 31, -16, 39, -30, 3, -23, -88, 5, 18, 8, -9, -13, -1, -60, 14, -55, 17, 19, -16, 26, -16, 4, 5, 1, 0, -35, -69, -3, -15, 7, -29, -36, -59, -7, -7, -40, -9, -4, -14, -15, -12, -24, 5, -7, -14, -40, -29, -18, -17, -16, -1, -35, -5, 10, -30, -17, -28, -34, -53, -33, -23, 8, -27, 4, -17, -1, 12, -2, -25, 3, 2, -29, -67, -20, -17, 22, -12, -1, -48, 28, -57, -16, -9, -8, -45, -26, -5, -33, -42, -10, 23, -16, -7, -12, -39, -18, -52, 17, -32, -19, 42, -6, -25, -17, -41, -26, -16, -46, -119, -5, -5, 22, 28, 10, -29, 13, -70, -34, 12, -73, 14, 7, -52, -28, -7, 13, 14, 0, -19, -22, -17, 33, 36, 16, 29, -4, -6, -30, -17, -11, 27, 23, 23, 12, 50, 6, -20, 26, 15, 32, 11, -11, -10, -9, 20, 20, 46, 15, 21, 24, -1, -11, 10, 11, 12, 8, -19, 7, 11, -10, -24, -10, -3, -28, -11, -3, -18, 12, 5, 5, 18, -5, -12, 8, -5, -6, 3, 10, 3, 13, -6, -7, -11, -1, -9, 9, -16, 8, 4, -12, 4, 2, -40, 2, -2, -14, 18, -5, -20, 4, -3, 2, 0, -12, -20, 5, -8, 0, -12, -1, -41, -23, -3, 0, -27, 18, -7, -2, 30, 16, 6, -10, -1, -12, -9, 22, 18, 16, -10, 5, 18, -5, -6, -8, 10, -4, 5, 6, 37, -38, 21, -21, -16, -27, 7, -24, 13, 30, -24, 24, 8, 16, -8, -6, -10, -14, 8, -21, 1, -2, 14, -11, -13, 27, -27, 44, -8, 27, -5, -11, 15, 3, -10, 18, -13, -6, 31, -7, 17, -12, 13, -11, -10, 39, -16, 28, -15, 12, -1, -16, 29, 13, -4, -5, -17, 10, 49, -28, 22, -2, 22, -13, -4, 5, -17, 25, -15, -10, -35, -17, -6, 6, -5, 21, -28, 17, 37, -43, -51, 12, 28, -3, -22, 19, -11, 1, -15, 9, -7, -20, 6, -12, -9, -2, 0, 19, 10, -15, 1, -26, 23, 17, 4, 14, 7, 19, -1, 3, -1, -6, -1, -11, -7, 0, 1, 20, 34, -9, -16, -14, 18, 12, 15, -42, 27, -14, -4, -3, 4, 24, -7, 9, -2, -9, 23, 9, -15, 4, -4, -4, 43, 14, 30, -25, 14, -38, 2, 12, 15, 28, -9, 15, 20, 3, 4, -6, -53, -10, -13, -3, 24, 28, 22, -31, 6, -39, -6, 29, 16, -8, -12, 6, -16, -9, 9, -25, -50, 16, -29, 3, -33, 30, 28, -27, 6, -22, -21, 25, 23, -30, 4, 16, -5, 8, 23, -13, -28, 36, -12, 26, -32, 18, 7, -21, 18, -8, 5, -4, 16, -6, 31, 16, 7, 33, 13, -30, -27, 18, 10, 27, -20, 2, -7, 36, -18, 23, 9, 2, -3, 1, -8, 7, -10, 27, 5, -9, 4, 8, 17, 17, -10, -25, -33, 14, -19, 26, -33, -14, -27, -31, -2, -2, -10, 5, -33, 16, 11, -7, -11, 2, -11, -25, -22, 5, -13, 25, -23, -14, -35, -21, -2, -14, -29, 6, 5, 8, 11, -10, -9, -7, 5, 6, -21, 16, -10, 24, -23, 1, -28, -29, -9, -41, -15, -5, 1, 13, 27, -19, -13, -7, -2, 14, -14, -2, -1, 6, -3, -14, -20, -32, -13, -41, -17, -35, 3, 21, 18, -31, -26, -13, 9, 10, -8, -19, -4, -12, 9, -7, -46, 9, -15, -46, -13, -46, 22, -10, 6, 
  -22, -30, -3, 9, -28, -50, 13, -41, 4, -16, -9, -38, -1, -17, -23, -16, -22, -37, 7, 11, -53, -45, -10, 11, -12, -36, -14, -30, 3, -8, 1, -47, 8, -32, -44, -18, -44, -27, -12, -4, -58, -17, -71, 4, -5, -15, -21, -2, -24, 14, 26, -1, 10, 0, -25, 0, -44, -1, 2, -14, -34, 24, -60, -5, -2, -13, -14, 34, -30, 33, 27, 12, 14, 6, 8, 35, -20, 19, 38, -8, -6, 40, -7, -10, 7, 18, -10, 16, -10, 16, 5, 20, 1, 24, 15, 11, -6, 14, 23, 1, 33, 52, 16, 26, 17, -15, -6, 36, -4, 22, 18, -3, 17, 3, -14, 11, 3, 3, 63, 2, 11, 74, 24, 20, 1, -16, 17, -1, -3, 16, 20, 15, 10, 32, -5, -4, 22, -4, -6, 3, 17, 13, 39, 15, -17, 6, 0, 15, 28, -3, 5, 0, 15, -25, 2, -13, -9, 11, 2, 38, -3, 12, -11, 5, -13, 7, 2, -3, -14, -73, -12, -4, -18, -3, -6, -31, -11, -16, 5, -3, 5, 10, 5, -2, 10, 21, 8, 4, 23, 6, 1, 10, -25, 4, 11, -18, 5, 10, -1, 19, 16, 16, 18, -13, 3, 4, 0, -17, 10, -2, -28, 2, -1, 13, -12, 10, 0, 6, -25, 23, 0, -26, 0, 22, 3, 4, -12, 2, 5, -24, -18, -13, -10, -29, -1, -12, 4, -9, 17, 9, -18, -47, 15, 31, 1, -5, -28, -19, 9, -26, -7, 14, -19, -9, -24, -17, -23, 10, 3, 3, 15, 22, -23, -19, -17, 3, -14, 4, -15, 13, -3, -1, 15, -12, 9, 7, -10, 8, -4, -3, 9, 3, -9, -36, -14, -32, -22, 0, -6, 3, 40, -8, 6, 20, 18, 8, -1, -10, -22, -27, 24, -9, 39, -29, -18, -22, -13, -4, 14, 6, 15, -16, -15, -9, 42, 11, 38, -12, -14, -10, 10, -35, 26, 10, -6, -3, 47, -6, 37, -18, 1, 6, -21, -1, 17, -28, 33, -10, -6, 14, 8, 37, 11, -28, -9, -8, 53, -12, 67, -4, 4, -9, -3, 2, 4, -15, 12, -5, -4, 17, -13, -8, -12, -12, -13, -10, -24, 7, 20, -4, 6, 0, 13, -9, 14, 13, 4, -2, -11, 29, 3, -14, -18, 10, -1, 0, -8, -9, -17, -11, 18, 11, -6, 0, -8, -3, 6, -21, -10, -38, -8, -16, -2, -31, -21, 1, -15, -4, -13, 6, -14, -7, -20, 11, 6, -1, -1, 7, -23, -19, 8, -21, -6, -1, -14, 4, 0, 3, 6, -10, -30, 25, -8, 18, 32, -23, 13, -5, 20, 21, 9, -3, 8, -22, 16, -4, 6, 20, -10, -4, -43, 15, -3, 7, 3, -9, 15, -1, 25, 2, 18, 14, 9, -50, 22, 2, -15, 8, 7, 10, 0, -10, 5, -16, -12, 12, 23, 10, 0, -32, -5, 5, 20, -37, -5, -21, 2, 6, 23, 16, 3, -21, -10, -23, -9, 24, 6, -2, 6, 11, -10, -27, -1, -32, -16, -14, -4, 1, 32, 3, -16, -26, -22, 7, -27, 2, -14, -3, 19, 33, -34, 0, -24, -35, -10, -2, -26, 9, -18, -8, -3, -9, -9, 32, 1, -4, -34, 2, 12, -18, -17, -1, -32, -40, -2, -11, -5, 27, -8, 17, -23, 14, -18, 15, 12, 5, -3, 10, 18, 1, -1, 5, -9, -22, 4, 10, 6, 28, 10, 28, -26, -3, -4, -13, 16, 23, -13, 12, -9, -15, -3, -15, -9, -24, -5, -3, 4, 30, -3, 6, -27, 22, -14, -6, -1, 5, 0, -9, 15, -7, 
  -72, -1, -94, 20, -25, -16, -40, 11, -70, 14, 28, -17, 37, 24, -18, 12, -53, 6, -36, -64, -41, 7, -28, 15, -20, 16, -22, 10, -24, 38, 14, -47, 35, 3, -20, 25, -23, 1, -11, -21, -34, -20, -11, -24, -27, -35, -21, 16, -17, 7, -3, -36, 3, -7, -35, 37, -26, -1, -19, -15, -36, -9, 8, 11, -68, -42, -8, 28, 16, 18, -32, -23, 17, -8, -6, -1, -15, 2, 5, -1, -42, 59, -28, 9, -45, -51, -13, 9, 21, 7, 30, -19, 23, 9, 0, -7, -23, -23, 4, 0, -39, 25, -16, -12, -25, -4, 12, 15, 4, 1, -6, 14, 24, 79, 13, 1, -19, -9, -7, 12, -35, 0, 4, 31, 18, -5, 19, 23, 14, -5, 7, -18, 1, 7, -22, 17, -20, -20, 9, 6, -26, 4, 11, 24, 16, 0, -9, 21, -2, 9, 14, 12, 9, 30, -7, 17, -27, 11, -6, -13, -16, 37, 47, 3, -12, -19, 9, -8, 2, 14, 5, 3, 17, 7, -5, 1, -15, -7, -3, 3, -7, -13, -22, -18, -1, -3, 15, -41, 35, -14, 1, -4, 22, 4, 6, 7, -6, -2, -16, 21, 2, -10, 1, 13, 13, 4, 5, -5, 11, 13, -32, -1, 7, -8, 3, 18, 10, -1, -3, 28, -1, -18, -10, 3, -10, -7, 8, -2, 0, 5, -19, 10, 7, 6, 4, -6, -3, 6, 9, 4, 18, 48, -31, -13, 18, 10, -2, 5, -7, 5, -33, 5, -22, 6, 36, 12, 7, 21, 13, -6, 5, 2, 2, 10, 12, 13, -15, 20, 16, 8, 10, -15, -5, -21, -29, 2, 3, 7, 15, 9, -8, 4, -24, 21, 19, 10, 0, 6, 1, 5, 20, -4, -13, -22, -17, 21, -36, 1, -6, 25, -11, -1, -31, 25, 20, 13, -9, 2, -12, 1, 35, 29, -2, -10, -49, -7, -4, 21, -29, -26, 0, 38, -5, -1, 9, -3, -10, -2, -5, 8, 19, -7, 7, 3, -2, 6, -2, 0, -11, -4, -18, -15, -8, 13, -4, -10, 19, -1, -11, -6, 15, -3, 0, -23, 6, 2, -9, -4, -26, 6, 2, -12, -3, 16, -28, 3, 3, -9, -7, 13, 9, 4, 6, -17, 0, -7, -1, -25, -33, 8, 13, -33, -8, 15, -23, 17, 7, -13, 15, -19, -10, -12, 1, -16, 3, -21, 6, -19, -10, 9, 12, -5, 26, 15, 13, 24, 26, -30, 11, -7, -18, -15, 15, -4, 4, 23, 9, -41, 5, 7, -17, -28, 0, 57, 7, 20, -11, -27, -11, -32, -15, -14, -15, -24, -5, -21, -1, -34, 23, -9, -15, -29, -14, 48, 24, 23, 8, 6, -2, -18, 8, 24, -29, -15, -10, -27, -8, 25, 23, 8, 6, -11, -15, 23, 10, 21, -21, 11, 7, 9, -2, 29, -14, 8, -7, 10, 1, 18, -14, -10, 14, 10, 4, 3, 4, 19, 10, 13, -12, 14, -20, -1, 9, -16, 5, -7, -6, 14, -15, -1, 13, 20, 9, 11, -9, -21, -5, -14, -10, 15, 11, 10, 26, -7, 8, 30, -7, -12, -1, 7, -2, 34, -6, 7, -7, -17, -6, -33, -7, -10, 21, -5, 0, 3, -7, -24, 7, -10, -4, -5, 4, -11, 7, -4, -3, -3, -5, -44, -1, -22, 15, -16, -2, 0, -11, -22, -5, -27, -10, -15, 9, 16, -9, -6, -17, -14, -6, -30, -8, -1, 25, -15, -22, -14, -2, 2, 3, -24, 15, 5, 17, 19, -2, 1, -25, 12, -1, -23, -10, -13, 35, 1, 17, 8, 19, 6, 3, -20, 10, -2, 
  27, 9, 33, -15, -7, 1, -24, 13, 24, 20, -19, 16, -3, -2, -10, 5, -4, 6, 9, 33, -7, -13, 11, -3, -7, -22, -21, 2, -15, -8, -7, -5, -23, -16, 2, -31, 3, 15, -11, -28, -26, 24, -10, 44, 8, -25, -5, -3, 18, 13, 15, -22, 19, -20, -21, -19, -16, -2, 15, -5, -15, 11, -18, 4, 2, -35, -20, 13, -12, -13, 37, -21, -2, 14, -13, -19, -16, -1, -22, 11, -6, 17, -5, -13, -16, 2, 12, 17, -24, -35, -24, -10, -85, 29, 16, -3, 3, 14, -17, -14, 3, -9, 24, 28, -20, -12, -1, 31, 29, -9, -64, -14, -24, -22, -9, 10, -1, 3, 9, -5, -14, 38, 20, -9, -39, -34, -13, -26, 7, 25, 8, -2, 33, 7, -17, 14, 4, -12, -26, 18, -12, -24, -10, -11, -29, -9, 5, -18, 40, 6, 6, -16, 0, -31, -4, -4, -16, 0, 3, -1, -11, -31, -55, -26, -5, 9, -46, 4, -3, -2, -11, -12, 0, -6, 5, 4, -3, 3, -3, -32, -6, -16, -31, 1, 1, 9, -3, 7, -32, 23, 3, -1, 13, 1, 11, 7, -13, 12, 18, -10, 14, 21, 5, -11, 6, -9, -5, 8, -2, -6, 83, 15, -17, 17, 1, -2, 6, -4, 19, -10, -6, 35, 4, -19, -7, -2, 3, 13, -2, -20, -32, 1, 10, -45, -6, -13, -11, 15, 5, -10, 2, -44, -6, 13, -21, -33, -4, 0, -24, -19, -8, -14, 46, 20, 6, 13, 14, -5, -7, -3, -14, -20, -31, -6, 4, -12, 34, -21, 1, -18, -10, -2, 22, 9, -12, 6, -32, -6, 22, 28, 0, -20, -25, -36, 10, -10, 16, -10, -1, 1, 1, 8, 25, 18, -18, 16, -8, 4, 20, -6, 8, 39, -33, -18, 4, 12, 16, -7, -40, 21, -29, -4, 6, 12, 10, 14, -37, 8, 44, -3, 12, -21, -29, -20, 15, 14, 0, 9, -40, 3, -16, 16, 3, 8, -3, 21, -13, 7, 17, 16, 8, 9, -11, -9, 32, 23, -22, 9, -31, 2, -7, 8, -4, 19, -11, 2, -6, 4, 31, -17, 6, 18, -6, -21, 25, 36, -59, 15, -70, -1, -22, 17, -5, 18, -5, -1, -21, 26, 9, -26, 25, -4, 8, -33, 13, 18, -28, 27, -61, 8, -12, 13, -8, -8, 3, 16, 0, 28, -7, -88, 11, 8, 3, -28, -6, -17, -29, 16, -1, 13, -2, -8, -3, -1, -8, -3, -5, 15, -3, -21, -4, 19, 3, -14, -1, -6, 28, -9, 15, 7, 3, 19, 6, 15, 16, 10, -4, 8, -18, 2, 10, 32, -3, -32, -13, -3, -5, -2, -15, 4, -18, 0, 6, 16, 24, 0, 13, -21, -31, 7, 10, -1, 6, -40, -9, 11, -5, -38, -20, -15, -29, -6, -28, -8, 38, 4, -1, -25, -30, -37, 10, -47, 16, 10, -12, -9, -2, -13, 23, -35, -31, -5, -29, -51, 7, 1, 17, -36, -3, -21, -8, -15, -1, 37, -8, 8, 10, -31, 18, -5, -5, -10, 12, -46, -20, -6, -6, -43, -9, 25, -13, -35, -31, 23, -3, 19, -29, -13, -50, -7, 4, -13, 9, -11, 16, 1, -10, -20, -54, -24, 8, -21, -10, 9, 11, 11, 9, 7, -22, 7, 2, 6, 17, -10, 18, 2, 15, 8, -12, -35, 24, -11, 9, 25, 9, 19, 22, 0, -4, 5, 5, 14, 41, -4, 11, 3, 26, -7, -7, -5, 22, -2, 10, 26, 11, 2, -5, -1, 6, -8, 14, 23, 35, 3, -11, 2, 9, -17, 2, 11, 
  -28, -38, 30, 11, -2, -25, 8, -35, 13, -41, -35, -48, -29, -23, -10, -14, 12, -39, -6, 35, -58, -26, 12, 47, -1, -25, -3, -14, 28, -16, -2, -44, -3, -45, -61, -23, -13, -13, -18, 16, -66, -7, -32, 37, 7, -14, -12, 0, 8, -14, -3, -46, -12, 6, -38, -10, -59, 1, -3, 30, -32, -1, -13, 9, -32, -21, 2, 15, 29, 4, 17, 2, 23, -15, -16, 18, -42, 15, 17, 13, -32, 34, -40, 11, -13, 10, 18, 18, -2, -6, 14, 2, -4, 18, -7, 10, -18, 2, 54, 12, -16, 21, -11, 46, -5, -11, -8, 9, 24, 8, 2, 7, 33, -5, -3, 14, -15, -13, 31, 39, 1, 38, -2, 10, -10, -21, -8, 9, -9, 13, 14, -8, 19, 23, -20, 7, 0, 3, -14, -18, -12, -40, 21, 4, -11, -1, -22, 9, 38, 14, 15, 8, -3, -32, -20, 5, -25, -9, -7, 5, -18, -12, -39, -15, -5, 4, -19, 8, -19, 16, -13, -6, 4, -16, 4, 24, -9, -16, -6, -30, -13, -9, -41, 24, 9, 9, -11, 13, -24, -4, 3, 9, 4, -6, -2, 3, -7, 1, -3, -2, 7, 13, 3, 0, -4, -2, 8, 14, 20, 7, 52, 21, -51, 3, 3, -11, -4, 1, -6, -12, -3, -17, 17, -3, -25, -4, -19, -1, -2, -14, -30, 2, 16, -21, -45, 6, 2, -3, -15, 8, -22, -66, -36, 16, 4, -24, 20, -13, -11, -47, -22, -4, -11, 42, -18, -30, -4, -22, 35, -1, -14, 23, -25, -27, -3, 4, -2, 6, -4, 19, 47, -5, 29, 8, -12, 27, -30, -4, 4, 3, -12, -18, -7, -28, 36, 10, 22, -5, -17, -4, 32, 31, -31, 22, 16, -6, 7, 10, 9, -1, 39, -3, 7, -30, 19, 27, 16, 4, -20, 28, 3, 14, 4, -12, -2, 22, 12, 31, -6, -18, 22, 2, 7, -4, 18, 25, -3, 3, -18, 2, -6, 3, -6, 8, 6, -20, 2, 19, -2, -21, 21, -19, 0, -31, 16, 20, -11, 1, -18, -2, 6, 7, -20, 3, 1, 1, 12, 15, -14, -33, 9, -5, -13, -7, -1, 21, 2, -11, -10, 18, -24, 13, 6, -24, 14, 8, -3, -1, -17, 26, 20, 8, -19, 17, 0, 5, 36, -11, 2, 2, -10, 1, 10, 10, 10, 2, 14, -11, 12, -18, -10, -19, 2, -15, 13, -1, 14, -6, 15, -18, -25, -19, -22, -10, 5, 5, 12, -5, 23, 49, -12, -22, 6, 17, 22, -1, 27, -7, -11, -25, -50, -4, -17, -11, 0, -8, 3, -2, 50, 7, 8, 52, -8, 0, 10, -2, -12, 18, -20, 25, 3, 8, 29, 15, 2, 31, 2, 14, 31, 8, 6, 28, -10, -11, 13, 4, -12, 7, -3, 12, -7, -11, 7, 8, 6, 14, -4, 16, 0, -28, 9, -4, 15, 9, -8, 5, 10, 3, 23, 4, -40, 2, -18, -17, -5, -2, 6, 21, 4, 6, -16, 13, -4, 30, 1, -24, 2, 18, 18, 7, 14, -3, 20, 11, -2, 17, -2, 9, 29, 8, -22, 59, 10, 15, 10, -24, 24, -3, 21, 0, 14, 6, 25, 21, -15, 0, -17, -5, 19, 8, -13, -1, 8, 5, 1, -17, -18, 0, -9, 12, 22, 2, 22, -5, -17, 1, 1, 8, 5, 19, -1, 13, -2, 32, -15, -15, 9, 11, -9, 14, 10, -12, 15, 1, 4, -9, -11, -1, 14, -18, 0, 10, -11, 32, -7, -1, 5, 29, 2, 5, 43, 27, 48, 17, 0, 23, -4, 0, 53, -3, 
  47, 5, 40, -2, 5, 8, -3, 44, 35, 18, -13, 21, -5, -27, -8, 9, 6, 20, -13, -6, 8, 5, 4, 7, -23, -5, -7, 17, -3, -4, 1, 15, -5, -17, 18, -14, 4, 20, -2, -22, 13, 27, -2, 6, -5, -3, 5, -9, -1, -4, 17, 8, 21, 10, 9, -19, 24, 0, 21, -20, 30, 7, 24, 18, -11, -12, 15, -26, 50, -5, 18, -13, 14, -16, -27, -12, 12, -35, -2, 23, -9, -19, -11, 13, -9, -5, -10, -30, -17, 0, 8, -14, 26, 0, -34, 12, -14, -22, -50, -37, -19, -32, -18, 8, -22, -21, -12, -34, -6, -1, 11, -15, 6, -36, -13, -11, -17, -29, -54, -13, -19, -49, -12, -15, 3, 3, -15, 0, 0, -17, 16, -13, 4, 7, 9, -6, -4, -37, 11, -38, 0, 17, -15, -21, 17, 14, 8, -20, 2, -3, 11, 8, 20, 37, 14, 19, -2, 10, 21, -4, 29, -41, -1, -12, 13, 12, 13, -13, -3, 25, 19, 23, -13, 16, 17, -8, 25, 11, -2, -21, 10, 1, 22, -11, -3, -10, 1, 2, 5, 8, 8, 5, -18, -16, -4, -2, 13, 3, 6, -1, 5, -19, -6, -20, 5, 12, 7, 11, 3, -9, -12, 10, -10, -10, 23, -13, -10, 1, 5, -4, 4, 41, 2, -23, 10, 8, 16, 9, 13, 6, -19, 7, 22, -19, -5, 4, 15, 19, 16, 7, 10, 5, 6, -8, -2, 13, -4, 9, 1, 25, 13, 5, 21, -10, -19, 27, 4, 15, -10, -12, 4, 14, 5, -14, 1, -1, -18, 19, 21, 11, 3, -22, 1, -12, 2, 14, 1, 4, 1, 16, -6, -2, 17, -7, -17, -3, -23, -1, 20, -16, -4, -7, 5, 18, 1, -12, 9, -7, 2, -5, -23, -7, -8, 6, -7, -4, -27, 1, -30, -8, -4, -17, 16, -17, -3, 5, -9, -12, -3, 5, -24, -9, -20, 8, 4, 2, -23, -6, -24, -6, 0, -8, 1, 9, 9, -8, -3, -17, 3, -39, -1, 0, -14, 22, 15, 6, -24, -16, -9, -14, -11, 15, 28, -5, 1, 3, 3, 3, -1, -1, -14, -10, -3, 37, 6, 9, -17, -12, -20, -12, 14, -3, -2, -6, 10, 10, 0, 8, -11, -50, 1, -7, -8, -4, 3, 16, -23, 1, -15, -10, 23, 22, 8, 11, 15, 2, 0, 7, -18, -30, 17, -17, 7, 11, 11, 4, -10, 21, -20, -2, 24, 11, 5, -10, 8, -2, 2, 0, -34, -61, 21, 2, 8, 11, -1, -4, 5, 11, 22, 21, 30, 2, 15, 3, 8, -3, 23, 4, -29, 14, 12, 1, 20, -1, 2, -2, -6, -13, 16, 2, 19, -12, 2, 19, 10, -3, 21, -9, -25, 4, 9, -15, 27, 23, 1, -3, 8, 0, 9, 9, -11, -17, -1, -2, -5, -10, 13, -13, 3, 8, -8, -37, 20, 31, -7, -18, 12, 8, 21, -10, 13, -14, -3, 1, -12, -10, -1, -4, 29, 18, -17, 18, -5, 24, 1, 0, 5, 4, 19, 27, 23, -9, 20, -12, 1, 7, -9, 14, -8, 12, -27, -11, -12, 21, 4, -2, 11, 9, 18, 27, 37, -15, 31, 0, 1, 30, 2, 0, 5, 25, -36, 1, 5, 38, 21, -14, 7, 16, 27, 4, 35, -6, 25, 6, 9, 7, -1, 2, 12, 22, -21, -44, 7, 32, 33, -9, -4, -1, 19, -4, 24, -6, 10, 29, -9, -9, -18, 0, -2, 13, -16, -16, -1, 27, 21, -3, 13, 1, 16, 9, -12, -11, -4, 10, -12, 8, -16, 6, -18, 12, 
};
const TfArray<2, int> tensor_dimension16 = { 2, { 30,600 } };
const TfArray<1, float> quant16_scale = { 1, { 0.010473994538187981, } };
const TfArray<1, int> quant16_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const ALIGN(8) int32_t tensor_data17[30] = { 92, 7, -501, 188, -165, -87, -308, -177, -31, -32, -149, -423, -66, -58, 163, 228, 173, -345, -64, -113, -193, -71, -170, -91, 44, -94, -4, -7, -53, 294, };
const TfArray<1, int> tensor_dimension17 = { 1, { 30 } };
const TfArray<1, float> quant17_scale = { 1, { 0.00046975564328022301, } };
const TfArray<1, int> quant17_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant17 = { (TfLiteFloatArray*)&quant17_scale, (TfLiteIntArray*)&quant17_zero, 0 };
const ALIGN(8) int8_t tensor_data18[20*30] = { 
  -42, 27, 75, -61, -49, -20, -29, -20, 45, -9, -12, -4, 70, -7, -41, 13, -15, 6, -44, 56, -40, 40, -21, -47, 39, 56, 57, -12, 36, 23, 
  -72, -70, 67, 76, 43, -10, -15, 8, -18, -7, 3, 32, 35, -35, -50, -6, 24, -3, -26, 7, 21, 35, -6, -23, 18, -5, 46, 7, 9, -10, 
  12, -73, -24, -22, 12, -46, -40, -31, 29, -31, 32, -13, -1, -47, 47, 13, -82, 30, -40, 3, 62, 0, -23, -6, 76, -16, 37, -35, 17, 6, 
  -29, -8, 52, 50, -52, 8, -48, 31, 2, -9, 4, 67, 37, -14, -4, -48, 33, 70, -10, -6, 29, -53, -13, -21, 10, -45, -32, 2, 4, -20, 
  -65, -29, -106, 61, -40, -31, 33, 31, 10, -13, -31, 72, -37, -27, 17, -6, 13, 3, -13, -41, -65, -99, -30, 1, -21, -6, -21, -1, 38, 20, 
  -4, 19, -35, 34, -41, 9, -31, 9, -45, -22, 39, -24, -65, 29, 6, -46, 59, -19, 43, 52, -58, 10, -49, 20, -33, 41, -3, -15, 35, 5, 
  -12, -55, -57, -36, 24, 19, -50, -55, 36, -14, -18, -7, -7, 20, -37, 32, -12, 6, -3, 51, -51, 37, 25, -22, -34, -51, -40, -24, -76, -59, 
  -9, -61, -80, -10, 66, 41, 45, -28, -38, 34, -2, 40, 49, 18, -35, -30, -12, -15, 46, -21, -2, -71, 22, 37, -41, -49, 15, -54, 10, 34, 
  1, 24, -12, -39, -31, 33, 15, 16, -17, 39, -40, -1, -19, 23, -22, 13, 31, -86, -38, 2, 39, -6, -14, -11, -7, 37, -19, -63, 36, 43, 
  -57, -52, 18, 78, 59, 5, 27, -35, 25, -13, -13, -32, 40, 33, -41, -50, -84, 33, -31, -24, 5, 42, -11, 26, 12, 19, 41, 5, 28, 21, 
  66, 18, -47, -17, 6, -28, -18, 12, -11, 10, -37, -89, -48, 49, -64, -34, 127, -66, 19, -11, -32, 10, -29, 46, 25, 36, -23, 27, -114, 12, 
  54, -35, -32, 32, 35, -36, 106, 83, -45, 7, -35, 38, -15, -44, 63, -4, 25, -25, -35, 61, -56, 32, 26, -14, 56, -30, 4, -41, -48, 50, 
  32, -121, 63, -7, -26, -36, -3, 56, -50, 25, 48, 53, -5, -21, 51, -38, -99, 50, -18, -49, 17, 21, 79, 19, -36, -42, -16, 45, 30, -37, 
  53, 2, -17, -7, -69, 11, 0, -6, -22, 43, 14, -29, -43, -6, -24, 23, -55, -75, 14, -90, -24, 44, 0, 39, -15, -102, 48, -81, -98, 57, 
  -22, 84, -61, -60, 10, 14, -8, -17, 18, -32, 31, -8, -41, 3, 57, 51, 112, -35, -37, 32, 36, 41, -27, -10, -27, -9, -49, 55, 45, 46, 
  -59, -3, 63, -53, 4, 7, -2, -24, -10, 28, 1, 45, -43, 18, -19, 19, 62, 7, 27, 34, 36, 1, -6, -6, 14, 74, -20, -38, -20, 14, 
  53, -24, 61, 14, 46, 44, -19, -45, -30, 24, 15, 4, -48, -46, 28, 44, 34, 7, 22, 6, 11, -47, -85, 3, -87, -14, 20, -14, 31, 19, 
  8, 23, -9, 35, -18, -46, -85, -39, -5, -43, -29, -40, -64, -14, -24, 37, 81, 18, -36, -30, -87, 17, -66, 44, 89, -34, 16, 35, 14, 54, 
  65, -6, 37, -66, 8, 30, -32, 18, -18, 31, 42, 65, -13, -30, -28, 44, -39, 34, -21, -31, 2, -6, 64, -49, -8, 24, 55, 49, 64, -30, 
  -7, -11, 38, -14, 30, 32, 82, 34, -40, -45, 1, 28, 30, 35, -15, -67, 26, -34, 40, 48, 48, -17, 45, 36, -28, 31, -28, -11, 26, 32, 
};
const TfArray<2, int> tensor_dimension18 = { 2, { 20,30 } };
const TfArray<1, float> quant18_scale = { 1, { 0.0069320262409746647, } };
const TfArray<1, int> quant18_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant18 = { (TfLiteFloatArray*)&quant18_scale, (TfLiteIntArray*)&quant18_zero, 0 };
const ALIGN(8) int32_t tensor_data19[20] = { -22, 52, 160, -285, 225, 90, 33, -131, -11, -41, 264, 151, -296, 14, 118, -278, 159, 359, -265, -268, };
const TfArray<1, int> tensor_dimension19 = { 1, { 20 } };
const TfArray<1, float> quant19_scale = { 1, { 0.00055046618217602372, } };
const TfArray<1, int> quant19_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant19 = { (TfLiteFloatArray*)&quant19_scale, (TfLiteIntArray*)&quant19_zero, 0 };
const TfArray<2, int> tensor_dimension20 = { 2, { 1,5 } };
const TfArray<1, float> quant20_scale = { 1, { 0.22902239859104156, } };
const TfArray<1, int> quant20_zero = { 1, { 31 } };
const TfLiteAffineQuantization quant20 = { (TfLiteFloatArray*)&quant20_scale, (TfLiteIntArray*)&quant20_zero, 0 };
const ALIGN(8) int8_t tensor_data21[5*20] = { 
  -7, 35, 3, 46, -101, 16, -21, 32, 10, -26, -85, 44, 35, -26, -41, 10, -1, -119, 39, 21, 
  -87, -49, -54, -54, 68, -57, -71, -9, 25, -63, 38, 31, 4, -58, 47, 25, -67, -77, 42, 43, 
  -57, 28, 27, 36, 22, 46, 32, -85, 3, -59, -12, 33, -59, -32, 31, -41, 40, 22, -22, -65, 
  11, 55, -60, -16, -46, 8, -87, -64, -74, 11, -6, -45, -13, 65, 34, -77, -40, 0, 3, -12, 
  32, -50, -1, -21, -38, -109, -60, -127, 18, -125, -57, -102, 53, -57, 5, -6, 64, -17, 82, -73, 
};
const TfArray<2, int> tensor_dimension21 = { 2, { 5,20 } };
const TfArray<1, float> quant21_scale = { 1, { 0.0090048657730221748, } };
const TfArray<1, int> quant21_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant21 = { (TfLiteFloatArray*)&quant21_scale, (TfLiteIntArray*)&quant21_zero, 0 };
const ALIGN(8) int32_t tensor_data22[5] = { -67, -18, 158, -66, -171, };
const TfArray<1, int> tensor_dimension22 = { 1, { 5 } };
const TfArray<1, float> quant22_scale = { 1, { 0.00083958485629409552, } };
const TfArray<1, int> quant22_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant22 = { (TfLiteFloatArray*)&quant22_scale, (TfLiteIntArray*)&quant22_zero, 0 };
const TfArray<4, int> tensor_dimension23 = { 4, { 1,258,1,5 } };
const TfArray<1, float> quant23_scale = { 1, { 0.040442217141389847, } };
const TfArray<1, int> quant23_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant23 = { (TfLiteFloatArray*)&quant23_scale, (TfLiteIntArray*)&quant23_zero, 0 };
const ALIGN(8) int32_t tensor_data24[1*4] = { 
  1, 258, 1, 5, 
};
const TfArray<2, int> tensor_dimension24 = { 2, { 1,4 } };
const TfArray<4, int> tensor_dimension25 = { 4, { 1,129,1,5 } };
const TfArray<1, float> quant25_scale = { 1, { 0.040442217141389847, } };
const TfArray<1, int> quant25_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant25 = { (TfLiteFloatArray*)&quant25_scale, (TfLiteIntArray*)&quant25_zero, 0 };
const TfArray<4, int> tensor_dimension26 = { 4, { 1,126,1,10 } };
const TfArray<1, float> quant26_scale = { 1, { 0.03842516615986824, } };
const TfArray<1, int> quant26_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant26 = { (TfLiteFloatArray*)&quant26_scale, (TfLiteIntArray*)&quant26_zero, 0 };
const ALIGN(8) int32_t tensor_data27[1*4] = { 
  1, 126, 1, 10, 
};
const TfArray<2, int> tensor_dimension27 = { 2, { 1,4 } };
const TfArray<4, int> tensor_dimension28 = { 4, { 1,63,1,10 } };
const TfArray<1, float> quant28_scale = { 1, { 0.03842516615986824, } };
const TfArray<1, int> quant28_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant28 = { (TfLiteFloatArray*)&quant28_scale, (TfLiteIntArray*)&quant28_zero, 0 };
const TfArray<4, int> tensor_dimension29 = { 4, { 1,60,1,20 } };
const TfArray<1, float> quant29_scale = { 1, { 0.044849712401628494, } };
const TfArray<1, int> quant29_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant29 = { (TfLiteFloatArray*)&quant29_scale, (TfLiteIntArray*)&quant29_zero, 0 };
const ALIGN(8) int32_t tensor_data30[1*4] = { 
  1, 60, 1, 20, 
};
const TfArray<2, int> tensor_dimension30 = { 2, { 1,4 } };
const TfArray<4, int> tensor_dimension31 = { 4, { 1,30,1,20 } };
const TfArray<1, float> quant31_scale = { 1, { 0.044849712401628494, } };
const TfArray<1, int> quant31_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant31 = { (TfLiteFloatArray*)&quant31_scale, (TfLiteIntArray*)&quant31_zero, 0 };
const TfArray<4, int> tensor_dimension32 = { 4, { 1,1,258,5 } };
const TfArray<1, float> quant32_scale = { 1, { 0.040442217141389847, } };
const TfArray<1, int> quant32_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant32 = { (TfLiteFloatArray*)&quant32_scale, (TfLiteIntArray*)&quant32_zero, 0 };
const TfArray<2, int> tensor_dimension33 = { 2, { 1,30 } };
const TfArray<1, float> quant33_scale = { 1, { 0.079409129917621613, } };
const TfArray<1, int> quant33_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant33 = { (TfLiteFloatArray*)&quant33_scale, (TfLiteIntArray*)&quant33_zero, 0 };
const TfArray<2, int> tensor_dimension34 = { 2, { 1,20 } };
const TfArray<1, float> quant34_scale = { 1, { 0.09323679655790329, } };
const TfArray<1, int> quant34_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant34 = { (TfLiteFloatArray*)&quant34_scale, (TfLiteIntArray*)&quant34_zero, 0 };
const TfArray<2, int> tensor_dimension35 = { 2, { 1,260 } };
const TfArray<2, int> tensor_dimension36 = { 2, { 1,5 } };
const TfArray<1, int> inputs0 = { 1, { 35 } };
const TfArray<1, int> outputs0 = { 1, { 1 } };
const TfLiteReshapeParams opdata1 = { { 1, 1, 260, 1, 0, 0, 0, 0, }, 4 };
const TfArray<2, int> inputs1 = { 2, { 1,3 } };
const TfArray<1, int> outputs1 = { 1, { 2 } };
const TfLiteDepthwiseConvParams opdata2 = { kTfLitePaddingValid, 1,1, 5, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs2 = { 3, { 2,4,5 } };
const TfArray<1, int> outputs2 = { 1, { 32 } };
const TfLiteReshapeParams opdata3 = { { 1, 258, 1, 5, 0, 0, 0, 0, }, 4 };
const TfArray<2, int> inputs3 = { 2, { 32,24 } };
const TfArray<1, int> outputs3 = { 1, { 23 } };
const TfLitePoolParams opdata4 = { kTfLitePaddingValid, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs4 = { 1, { 23 } };
const TfArray<1, int> outputs4 = { 1, { 25 } };
const TfLiteReshapeParams opdata5 = { { 1, 1, 129, 5, 0, 0, 0, 0, }, 4 };
const TfArray<2, int> inputs5 = { 2, { 25,7 } };
const TfArray<1, int> outputs5 = { 1, { 6 } };
const TfLiteConvParams opdata6 = { kTfLitePaddingValid, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs6 = { 3, { 6,8,10 } };
const TfArray<1, int> outputs6 = { 1, { 9 } };
const TfLiteReshapeParams opdata7 = { { 1, 126, 1, 10, 0, 0, 0, 0, }, 4 };
const TfArray<2, int> inputs7 = { 2, { 9,27 } };
const TfArray<1, int> outputs7 = { 1, { 26 } };
const TfLitePoolParams opdata8 = { kTfLitePaddingValid, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs8 = { 1, { 26 } };
const TfArray<1, int> outputs8 = { 1, { 28 } };
const TfLiteReshapeParams opdata9 = { { 1, 1, 63, 10, 0, 0, 0, 0, }, 4 };
const TfArray<2, int> inputs9 = { 2, { 28,12 } };
const TfArray<1, int> outputs9 = { 1, { 11 } };
const TfLiteConvParams opdata10 = { kTfLitePaddingValid, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs10 = { 3, { 11,13,15 } };
const TfArray<1, int> outputs10 = { 1, { 14 } };
const TfLiteReshapeParams opdata11 = { { 1, 60, 1, 20, 0, 0, 0, 0, }, 4 };
const TfArray<2, int> inputs11 = { 2, { 14,30 } };
const TfArray<1, int> outputs11 = { 1, { 29 } };
const TfLitePoolParams opdata12 = { kTfLitePaddingValid, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs12 = { 1, { 29 } };
const TfArray<1, int> outputs12 = { 1, { 31 } };
const TfLiteFullyConnectedParams opdata13 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs13 = { 3, { 31,16,17 } };
const TfArray<1, int> outputs13 = { 1, { 33 } };
const TfLiteFullyConnectedParams opdata14 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs14 = { 3, { 33,18,19 } };
const TfArray<1, int> outputs14 = { 1, { 34 } };
const TfLiteFullyConnectedParams opdata15 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs15 = { 3, { 34,21,22 } };
const TfArray<1, int> outputs15 = { 1, { 20 } };
const TfLiteSoftmaxParams opdata16 = { 1 };
const TfArray<1, int> inputs16 = { 1, { 20 } };
const TfArray<1, int> outputs16 = { 1, { 0 } };
const TfArray<1, int> inputs17 = { 1, { 0 } };
const TfArray<1, int> outputs17 = { 1, { 36 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteInt8, tensor_arena + 48, (TfLiteIntArray*)&tensor_dimension0, 5, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteInt8, tensor_arena + 1568, (TfLiteIntArray*)&tensor_dimension1, 260, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant1))}, },
  { kTfLiteInt8, tensor_arena + 1296, (TfLiteIntArray*)&tensor_dimension2, 260, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant2))}, },
  { kTfLiteInt32, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteInt8, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 15, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteInt32, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteInt8, tensor_arena + 2528, (TfLiteIntArray*)&tensor_dimension6, 645, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteInt32, (void*)tensor_data7, (TfLiteIntArray*)&tensor_dimension7, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteInt8, (void*)tensor_data8, (TfLiteIntArray*)&tensor_dimension8, 200, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteInt8, tensor_arena + 1264, (TfLiteIntArray*)&tensor_dimension9, 1260, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteInt32, (void*)tensor_data10, (TfLiteIntArray*)&tensor_dimension10, 40, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
  { kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension11, 630, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant11))}, },
  { kTfLiteInt32, (void*)tensor_data12, (TfLiteIntArray*)&tensor_dimension12, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteInt8, (void*)tensor_data13, (TfLiteIntArray*)&tensor_dimension13, 800, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant13))}, },
  { kTfLiteInt8, tensor_arena + 1200, (TfLiteIntArray*)&tensor_dimension14, 1200, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant14))}, },
  { kTfLiteInt32, (void*)tensor_data15, (TfLiteIntArray*)&tensor_dimension15, 80, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant15))}, },
  { kTfLiteInt8, (void*)tensor_data16, (TfLiteIntArray*)&tensor_dimension16, 18000, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant16))}, },
  { kTfLiteInt32, (void*)tensor_data17, (TfLiteIntArray*)&tensor_dimension17, 120, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant17))}, },
  { kTfLiteInt8, (void*)tensor_data18, (TfLiteIntArray*)&tensor_dimension18, 600, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant18))}, },
  { kTfLiteInt32, (void*)tensor_data19, (TfLiteIntArray*)&tensor_dimension19, 80, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant19))}, },
  { kTfLiteInt8, tensor_arena + 32, (TfLiteIntArray*)&tensor_dimension20, 5, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant20))}, },
  { kTfLiteInt8, (void*)tensor_data21, (TfLiteIntArray*)&tensor_dimension21, 100, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant21))}, },
  { kTfLiteInt32, (void*)tensor_data22, (TfLiteIntArray*)&tensor_dimension22, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant22))}, },
  { kTfLiteInt8, tensor_arena + 1296, (TfLiteIntArray*)&tensor_dimension23, 1290, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant23))}, },
  { kTfLiteInt32, (void*)tensor_data24, (TfLiteIntArray*)&tensor_dimension24, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension25, 645, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant25))}, },
  { kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension26, 1260, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant26))}, },
  { kTfLiteInt32, (void*)tensor_data27, (TfLiteIntArray*)&tensor_dimension27, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteInt8, tensor_arena + 1264, (TfLiteIntArray*)&tensor_dimension28, 630, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant28))}, },
  { kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension29, 1200, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant29))}, },
  { kTfLiteInt32, (void*)tensor_data30, (TfLiteIntArray*)&tensor_dimension30, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteInt8, tensor_arena + 1200, (TfLiteIntArray*)&tensor_dimension31, 600, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant31))}, },
  { kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension32, 1290, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant32))}, },
  { kTfLiteInt8, tensor_arena + 32, (TfLiteIntArray*)&tensor_dimension33, 30, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant33))}, },
  { kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension34, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant34))}, },
  { kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension35, 1040, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension36, 20, {kTfLiteNoQuantization, nullptr}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, nullptr, OP_QUANTIZE, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_DEPTHWISE_CONV_2D, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs4, (TfLiteIntArray*)&outputs4, const_cast<void*>(static_cast<const void*>(&opdata4)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs5, (TfLiteIntArray*)&outputs5, const_cast<void*>(static_cast<const void*>(&opdata5)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs6, (TfLiteIntArray*)&outputs6, const_cast<void*>(static_cast<const void*>(&opdata6)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs7, (TfLiteIntArray*)&outputs7, const_cast<void*>(static_cast<const void*>(&opdata7)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs8, (TfLiteIntArray*)&outputs8, const_cast<void*>(static_cast<const void*>(&opdata8)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs9, (TfLiteIntArray*)&outputs9, const_cast<void*>(static_cast<const void*>(&opdata9)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs10, (TfLiteIntArray*)&outputs10, const_cast<void*>(static_cast<const void*>(&opdata10)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs11, (TfLiteIntArray*)&outputs11, const_cast<void*>(static_cast<const void*>(&opdata11)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs12, (TfLiteIntArray*)&outputs12, const_cast<void*>(static_cast<const void*>(&opdata12)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs13, (TfLiteIntArray*)&outputs13, const_cast<void*>(static_cast<const void*>(&opdata13)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs14, (TfLiteIntArray*)&outputs14, const_cast<void*>(static_cast<const void*>(&opdata14)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs15, (TfLiteIntArray*)&outputs15, const_cast<void*>(static_cast<const void*>(&opdata15)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs16, (TfLiteIntArray*)&outputs16, const_cast<void*>(static_cast<const void*>(&opdata16)), OP_SOFTMAX, },
  { (TfLiteIntArray*)&inputs17, (TfLiteIntArray*)&outputs17, nullptr, OP_DEQUANTIZE, },
};
static TfLiteStatus AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                                 size_t bytes, void** ptr) {
  static uint8_t *AllocPtr = tensor_arena + sizeof(tensor_arena);

  AllocPtr -= bytes;
  *ptr = AllocPtr;
  return kTfLiteOk;
}
} // namespace

TfLiteStatus heartbeats_init() {
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.tensors = tflTensors;
  ctx.tensors_size = 37;
  for(size_t i = 0; i < 37; ++i) {
    tflTensors[i].data.data = tensorData[i].data;
    tflTensors[i].type = tensorData[i].type;
    tflTensors[i].is_variable = 0;
    tflTensors[i].allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
    tflTensors[i].bytes = tensorData[i].bytes;
    tflTensors[i].dims = tensorData[i].dims;
    tflTensors[i].quantization = tensorData[i].quantization;
    if (tflTensors[i].quantization.type == kTfLiteAffineQuantization) {
      TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
      tflTensors[i].params.scale = quant->scale->data[0];
      tflTensors[i].params.zero_point = quant->zero_point->data[0];
    }
  }
  registrations[OP_QUANTIZE] = tflite::ops::micro::Register_QUANTIZE();
  registrations[OP_RESHAPE] = tflite::ops::micro::Register_RESHAPE();
  registrations[OP_DEPTHWISE_CONV_2D] = tflite::ops::micro::Register_DEPTHWISE_CONV_2D();
  registrations[OP_MAX_POOL_2D] = tflite::ops::micro::Register_MAX_POOL_2D();
  registrations[OP_CONV_2D] = tflite::ops::micro::Register_CONV_2D();
  registrations[OP_FULLY_CONNECTED] = tflite::ops::micro::Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = tflite::ops::micro::Register_SOFTMAX();
  registrations[OP_DEQUANTIZE] = tflite::ops::micro::Register_DEQUANTIZE();

  for(size_t i = 0; i < 18; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
    tflNodes[i].custom_initial_data = nullptr;
    tflNodes[i].custom_initial_data_size = 0;
    if (registrations[nodeData[i].used_op_index]->init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index]->init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for(size_t i = 0; i < 18; ++i) {
    if (registrations[nodeData[i].used_op_index]->prepare) {
      TfLiteStatus status = registrations[nodeData[i].used_op_index]->prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  35, 
};
TfLiteTensor* heartbeats_input(int index) {
  return &ctx.tensors[inTensorIndices[index]];
}

static const int outTensorIndices[] = {
  36, 
};
TfLiteTensor* heartbeats_output(int index) {
  return &ctx.tensors[outTensorIndices[index]];
}

TfLiteStatus heartbeats_invoke() {
  for(size_t i = 0; i < 18; ++i) {
    TfLiteStatus status = registrations[nodeData[i].used_op_index]->invoke(&ctx, &tflNodes[i]);
    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}
